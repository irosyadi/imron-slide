---
title: "Signal and Systems"
# subtitle: "Continuous-Time and Discrete-Time Signals: Introduction"
author: "Imron Rosyadi"
format:
  live-revealjs:
    logo: "qrjs_assets/unsoed_logo.png"
    footer: "[irosyadi-2025](https://imron-slide.vercel.app)"
    slide-number: true
    chalkboard: true
    scrollable: true
    controls: true
    progress: true
    preview-links: false
    transition: fade
    incremental: false
    smaller: false
    theme: [default, qrjs_assets/ir_style.scss]
filters:
  - pyodide
---

# 1.1 Continuous-Time and Discrete-Time Signals: Introduction

::: {.notes}
Welcome to our first lecture in Signals and Systems. Today, we'll lay the foundation by defining what signals are, how they are mathematically represented, and how we classify them based on their continuity and energy/power characteristics. This fundamental understanding is crucial for everything we'll build upon in this course.
:::

---

## What is a Signal?

Signals describe patterns of variation that convey information.

:::: {.columns}
::: {.column width="50%"}
-   **Electrical Circuits**: Voltage/current changes over time.
    ![](https://cdn.mathpix.com/cropped/2024_02_14_ad5c48a840b9702e9410g-033.jpg?height=327&width=633&top_left_y=243&top_left_x=401){fig-align="center" width="90%"}
:::
::: {.column width="50%"}
-   **Audio/Speech**: Acoustic pressure fluctuations.
    ![](https://cdn.mathpix.com/cropped/2024_02_14_ad5c48a840b9702e9410g-033.jpg?height=1124&width=944&top_left_y=782&top_left_x=210){fig-align="center" width="80%"}
:::
::::

::: {.notes}
Signals are essentially carriers of information. Think of them as dynamic entities where the information is encoded in how a physical quantity changes. We see examples all around us: the humble voltage in a circuit, how a car's speed changes, the intricate pressure waves our vocal cords produce to form speech, or even the varying brightness levels that make up an image. Each of these variations holds specific information.
:::

---

## Signal (Examples)

<iframe src="https://id.tradingview.com/chart/?symbol=IDX%3ACOMPOSITE" width="100%" height="500" frameborder="0" allowfullscreen></iframe>

---

## Signal (Examples)


<iframe src="https://motortwin.vercel.app/" width="100%" height="500" frameborder="0" allowfullscreen></iframe>

---

## Mathematical Representation
Signals are mathematically described as functions of one or more independent variables.
Typically, we refer to the independent variable as "time."

:::: {.columns}
::: {.column width="50%"}
### Continuous-Time (CT) Signals: $x(t)$
-   Independent variable `t` is continuous.
-   Defined for a continuum of values.
:::
::: {.column width="50%"}
### Discrete-Time (DT) Signals: $x[n]$
-   Independent variable `n` is discrete (integers).
-   Defined only at discrete points.
:::
::::

---

## Mathematical Representation

:::: {.columns}
::: {.column width="50%"}
### Continuous-Time (CT) Signals: $x(t)$
-   **Examples**:
    -   Speech signal: $P(t)$
    -   Wind profile vs. height: $W(h)$
    ![](https://cdn.mathpix.com/cropped/2024_02_14_ad5c48a840b9702e9410g-034.jpg?height=665&width=808&top_left_y=1516&top_left_x=249){fig-align="center" width="75%"}
:::
::: {.column width="50%"}
### Discrete-Time (DT) Signals: $x[n]$
-   **Examples**:
    -   Weekly Dow-Jones Index: $D[k]$
    -   Demographic data
    ![](https://cdn.mathpix.com/cropped/2024_02_14_ad5c48a840b9702e9410g-035.jpg?height=667&width=1200&top_left_y=212&top_left_x=335){fig-align="center" width="100%"}
:::
::::

::: {.notes}
Mathematically, we represent signals as functions. For this course, we'll primarily focus on signals with a single independent variable, which we most often call "time," even if it represents something else like height or depth.

We distinguish between two major types: Continuous-Time (CT) signals, denoted $x(t)$, are defined for every possible value of $t$, much like how voltage in a circuit changes smoothly over time.

In contrast, Discrete-Time (DT) signals, denoted $x[n]$, are only defined at specific, discrete points, usually integer values of $n$. Think of a stock market index that's only recorded at the end of each day or week – there's no data point in between.
:::

---

## Visualizing CT Signals
### Continuous-Time Signal Example: $x(t) = \cos(2\pi t)$

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(7, 4))
t = np.linspace(-2, 2, 500)
x_t = np.cos(2 * np.pi * t)
plt.plot(t, x_t, label='x(t)', color='blue')
plt.title('Continuous-Time Signal x(t)')
plt.xlabel('Time (t)')
plt.ylabel('Amplitude')
plt.grid(True)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()
```

---

## Visualizing DT Signals
### Discrete-Time Signal Example: $x[n] = \cos(\frac{\pi}{4}n)$

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

plt.figure(figsize=(7, 4))
n = np.arange(-8, 9)
x_n = np.cos(np.pi / 4 * n)
plt.stem(n, x_n, label='x[n]', markerfmt='o', linefmt='b-', basefmt=' ')
plt.title('Discrete-Time Signal x[n]')
plt.xlabel('Discrete Time (n)')
plt.ylabel('Amplitude')
plt.grid(True)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()
```

::: {.notes}
The visual representation is key to distinguishing these signal types. As you can see from the interactive plots:
For a continuous-time signal, the graph is a smooth, unbroken curve, indicating that the signal has a value at every single point in continuous time.
For a discrete-time signal, the graph consists of individual stems, or impulses, at integer points. There's no signal defined in between these integer values. This emphasizes that discrete-time signals are sequences of values. Feel free to run and interact with these code blocks to see how they behave.
:::

---

## Origins of Discrete-Time Signals
Discrete-time signals can arise in two ways:

1.  **Inherently Discrete Phenomena**:
    -   Variables are naturally discrete.
    -   **Examples**: Population counts, quarterly economic data, number of defects per batch.

2.  **Sampling of Continuous-Time Signals**:
    -   Converting a continuous signal into a discrete sequence.
    -   **Process**: Measuring the continuous signal's value at regular intervals.
    -   **Importance**: Foundation of modern digital signal processing.
    -   **Applications**: Digital audio, image processing (pixels are samples of brightness), digital control systems (autopilots).

::: {.notes}
It's important to understand that discrete-time signals aren't always born discrete. Many are created by taking a continuous-time signal and sampling it. This process, often done by Analog-to-Digital Converters (ADCs), is fundamental to modern digital systems. Because digital processors thrive on discrete data, sampling allows us to bring real-world analog signals into the digital domain for processing, analysis, and storage. This is why when you zoom in on a digital image, you eventually see the individual pixels – each pixel is a sample of the original continuous image's brightness.
:::

---

## Signal Energy and Power

Motivation derives from physical systems (e.g., electrical power $p(t) = v(t)i(t)$ across a resistor).

We extend these concepts to any signal. For a general signal $x(t)$ or $x[n]$ , we use $|x|^2$.

-   **Total Energy over a finite interval**:
    -   CT: $\int_{t_1}^{t_2} |x(t)|^2 dt$
    -   DT: $\sum_{n=n_1}^{n_2} |x[n]|^2$
-   **Average Power over a finite interval**:
    -   CT: $\frac{1}{t_2-t_1} \int_{t_1}^{t_2} |x(t)|^2 dt$
    -   DT: $\frac{1}{n_2-n_1+1} \sum_{n=n_1}^{n_2} |x[n]|^2$

::: {.notes}
The concepts of energy and power are borrowed from physics but are generalized in Signals and Systems. Even if a signal doesn't directly represent physical energy (like velocity, or a sound wave frequency), we still use these terms to characterize its 'strength' or 'intensity' over time.

For signals that can take complex values, which we'll encounter later, we use the magnitude squared, $|x|^2$, analogous to how physical power is proportional to voltage or current squared. These definitions help us quantify how much 'content' a signal has within a specific duration.
:::

---

## Total Energy ($E_{\infty}$) for CT Signals

The total energy of a continuous-time signal $x(t)$ over an infinite interval is:

$$
E_{\infty} \triangleq \lim _{T \rightarrow \infty} \int_{-T}^{T}|x(t)|^{2} d t=\int_{-\infty}^{+\infty}|x(t)|^{2} d t
$$

-   If $E_{\infty} < \infty$, the signal is a **finite-energy signal**.
-   If $E_{\infty} = \infty$, the signal has **infinite energy**.

---

## Total Energy ($E_{\infty}$) for CT Signals

### Example: Finite Energy Pulse Signal
Consider a rectangular pulse $x(t) = 1$ for $0 \leq t \leq 1$ and $0$ otherwise.

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

# Define the signal x(t)
def x_ct(t):
    return np.where((t >= 0) & (t <= 1), 1.0, 0.0)

# Plot the signal
plt.figure(figsize=(7, 4))
t_plot = np.linspace(-2, 3, 500)
plt.plot(t_plot, x_ct(t_plot), label='x(t)', color='purple', linewidth=2)
plt.title('Continuous-Time Rectangular Pulse Signal')
plt.xlabel('t')
plt.ylabel('Amplitude')
plt.grid(True)
plt.ylim(-0.2, 1.2)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()

# Calculate energy
# Since the function is 1 for t in [0,1] and 0 elsewhere, the integral is simple.
# E_inf = integral from -inf to inf of |x(t)|^2 dt
#       = integral from 0 to 1 of 1^2 dt = [t] from 0 to 1 = 1 - 0 = 1
E_inf_calculated = 1.0
print(f"Calculated Total Energy (E_inf): {E_inf_calculated}")
```

::: {.notes}
When we analyze signals over their entire duration, from negative to positive infinity, we use the concept of total energy. This is defined by integrating the magnitude squared of the signal over all time. A signal with finite total energy is one where this integral converges to a finite value. Such signals are typically "transient" in nature, meaning they eventually die out and don't persist indefinitely. The rectangular pulse shown is a classic example: it only exists for a brief period, and its energy is clearly finite.
:::

---

## Total Energy ($E_{\infty}$) for DT Signals

The total energy of a discrete-time signal $x[n]$ over an infinite interval is:

$$
E_{\infty} \triangleq \lim _{N \rightarrow \infty} \sum_{n=-N}^{+N}|x[n]|^{2}=\sum_{n=-\infty}^{+\infty}|x[n]|^{2}
$$

-   If $E_{\infty} < \infty$, the signal is a **finite-energy signal**.

---

## Total Energy ($E_{\infty}$) for DT Signals
### Example: Decaying Exponential
Consider $x[n] = (0.5)^n u[n]$, where $u[n]$ is the unit step function ($u[n]=1$ for $n \ge 0$, $0$ for $n < 0$).

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

# Define the signal x[n]
n_vals = np.arange(0, 10) # Consider n from 0 to 9 for calculation example
x_n = (0.5)**n_vals

# Plot the signal
plt.figure(figsize=(7, 4))
plt.stem(n_vals, x_n, label='x[n]', markerfmt='o', linefmt='b-', basefmt=' ', bottom=0)
plt.title('Discrete-Time Decaying Exponential Signal')
plt.xlabel('n')
plt.ylabel('Amplitude')
plt.grid(True)
plt.ylim(0, 1.1)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()

# Calculate energy for infinite N (using formula for geometric series)
# E_inf = sum from n=0 to inf of (0.5^n)^2 = sum from n=0 to inf of (0.25)^n
# This is a geometric series sum = 1 / (1 - r) where r = 0.25
E_inf_calculated = 1 / (1 - 0.25)
print(f"Calculated Total Energy (E_inf): {E_inf_calculated}")
```

::: {.notes}
For discrete-time signals, total energy is calculated by summing the squared magnitudes of all signal samples from negative to positive infinity. Like their continuous counterparts, discrete-time signals with finite total energy are those whose sum converges. The decaying exponential is a perfect illustration: as 'n' increases, the signal values become smaller and smaller, ensuring that the infinite sum of their squares remains finite. This is also a transient signal.
:::

---

## Average Power ($P_{\infty}$) for CT Signals

The time-averaged power over an infinite interval for a continuous-time signal $x(t)$ is:

$$
P_{\infty} \triangleq \lim _{T \rightarrow \infty} \frac{1}{2 T} \int_{-T}^{T}|x(t)|^{2} d t
$$

-   If $E_{\infty} < \infty$, then $P_{\infty} = 0$.
-   If $P_{\infty} > 0$ and $P_{\infty} < \infty$, the signal is a **finite-power signal** (implying $E_{\infty} = \infty$).

---

## Average Power ($P_{\infty}$) for CT Signals

### Example: Sinusoidal Signal
Consider $x(t) = A \cos(\omega t + \phi)$. Its average power is $P_{\infty} = A^2/2$. Let's test with $x(t) = \cos(2\pi t)$.

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

# Define the signal x(t)
def x_ct_sin(t):
    return np.cos(2 * np.pi * t)

# Plot the signal
plt.figure(figsize=(7, 4))
t_plot = np.linspace(-2, 2, 500)
plt.plot(t_plot, x_ct_sin(t_plot), label='x(t)', color='teal', linewidth=2)
plt.title('Continuous-Time Sinusoidal Signal')
plt.xlabel('t')
plt.ylabel('Amplitude')
plt.grid(True)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()

# Calculate average power (P_inf) for A*cos(wt+phi) is A^2/2
A = 1 # Amplitude of cos(2pi*t)
P_inf_calculated = A**2 / 2
print(f"Calculated Average Power (P_inf): {P_inf_calculated}")

# For comparison, let's try to calculate E_inf - it will be infinite
# E_inf_approx = np.trapz(x_ct_sin(t_plot)**2, t_plot)
# print(f"Approximate Total Energy over plotted range: {E_inf_approx}")
```

::: {.notes}
Average power describes how much energy, on average, is contained in a signal over an infinitely long period. It's often more relevant for signals that persist indefinitely, such as periodic signals. If a signal has finite total energy, its average power must be zero, because you're distributing that finite energy over an infinite duration.

However, if a signal has a constant "strength" over time, it will have finite average power but infinite total energy. Sinusoidal signals, like the cosine wave demonstrated, are prime examples. Their amplitude oscillates but never dies down, so they continuously carry power, leading to infinite total energy over infinite time, but finite average power.
:::

---

## Average Power ($P_{\infty}$) for DT Signals

The time-averaged power over an infinite interval for a discrete-time signal $x[n]$ is:

$$
P_{\infty} \triangleq \lim _{N \rightarrow \infty} \frac{1}{2 N+1} \sum_{n=-N}^{+N}|x[n]|^{2}
$$

-   If $E_{\infty} < \infty$, then $P_{\infty} = 0$.
-   If $P_{\infty} > 0$ and $P_{\infty} < \infty$, the signal is a **finite-power signal** (implying $E_{\infty} = \infty$).

---

## Average Power ($P_{\infty}$) for DT Signals

### Example: Constant Signal
Consider $x[n] = 4$.

```{pyodide}
#| max-lines: 10
import numpy as np
import matplotlib.pyplot as plt

# Define the signal x[n] = 4
n_vals = np.arange(-5, 6)
x_n_const = 4 * np.ones_like(n_vals)

# Plot the signal
plt.figure(figsize=(7, 4))
plt.stem(n_vals, x_n_const, label='x[n]=4', markerfmt='o', linefmt='b-', basefmt=' ', bottom=0)
plt.title('Discrete-Time Constant Signal')
plt.xlabel('n')
plt.ylabel('Amplitude')
plt.grid(True)
plt.ylim(0, 5)
plt.axhline(0, color='black',linewidth=0.5)
plt.axvline(0, color='black',linewidth=0.5)
plt.show()

# Calculate average power (P_inf)
# For a constant signal x[n] = C, P_inf = |C|^2
C = 4
P_inf_calculated = C**2
print(f"Calculated Average Power (P_inf): {P_inf_calculated}")

# This signal has infinite energy.
# Try to run: sum_val = np.sum(x_n_const**2)
# print(f"Energy over finite range: {sum_val}")
```

::: {.notes}
The definition of average power for discrete-time signals is conceptually identical to continuous-time, using summation instead of integration. A crucial example is a constant signal, like $x[n]=4$. While its total energy over infinite time is infinite (as you're summing a non-zero value infinitely many times), its average power is simply the square of its magnitude – a finite, non-zero value.
Similarly, discrete-time sinusoidal signals (like $x[n] = \cos(\omega n)$) also have infinite energy but finite average power.
:::

---

## Signal Classification based on Energy & Power

Signals can be broadly classified into three categories:

```{mermaid}
graph LR
    A[Signal x] --> B{Calc. $$E_\infty$$};
    B --> C{ $$E_\infty \lt \infty$$ ?};
    C -- Yes --> D[Finite Energy Signal];
    D --> E[$$P_\infty = 0$$];
    C -- No --> F{Calculate $$P_\infty$$};
    F --> G{$$P_\infty \lt \infty$$ ?};
    G -- Yes --> H[Finite Power Signal];
    H --> I[$$E_\infty = \infty$$];
    G -- No --> J[Neither Finite Energy nor Power];
    J --> K[$$E_\infty = \infty$$];
    J --> L[$$P_\infty = \infty$$];

    style D fill:#ddf,stroke:#333,stroke-width:2px;
    style H fill:#dfd,stroke:#333,stroke-width:2px;
    style J fill:#fdd,stroke:#333,stroke-width:2px;
```

-   **Finite Energy Signals**: $E_{\infty} < \infty \implies P_{\infty} = 0$. (e.g., pulses, decaying exponentials)
-   **Finite Power Signals**: $P_{\infty} < \infty$ and $P_{\infty} > 0 \implies E_{\infty} = \infty$. (e.g., periodic signals, constant signals)
-   **Neither Finite Energy nor Finite Power**: $E_{\infty} = \infty$ AND $P_{\infty} = \infty$. (e.g., $x(t)=t$, $x[n]=n$)

::: {.notes}
This diagram summarizes the classification of signals based on their energy and power properties. It's a critical distinction in signal analysis. Finite energy signals are often those that are transient and die out, such as the output of an event. Finite power signals, on the other hand, are typically continuous, persistent signals like voltage from a power supply or a recurring musical note. It's important to understand that a signal cannot simultaneously have finite non-zero energy and finite non-zero power from these definitions over an infinite interval. There are also signals that fall into neither category, growing without bound such that both energy and power are infinite.
:::

---

## Key Takeaways

-   Signals convey information through patterns of variation.
-   Distinguish between **Continuous-Time ($x(t)$)** and **Discrete-Time ($x[n]$)** signals.
    -   CT: Defined for a continuum of values.
    -   DT: Defined only at discrete points (often sampled CT signals).
-   Signals are characterized by their **Total Energy ($E_{\infty}$)** and **Average Power ($P_{\infty}$)**.
    -   Used to classify signals into finite-energy, finite-power, or neither.

::: {.notes}
To wrap up this introductory session, remember these core concepts: signals are central to how we understand and interact with the world around us. Mastering the distinction between continuous and discrete time, and being able to classify signals based on their energy and power, will provide strong foundations for the more advanced topics we'll cover, such as convolution, Fourier analysis, and system response. Next time, we'll delve into basic operations we can perform on signals and introduce some fundamental signal types.
:::
