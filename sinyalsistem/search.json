[
  {
    "objectID": "ss_36.html#introduction-discrete-time-periodic-signals",
    "href": "ss_36.html#introduction-discrete-time-periodic-signals",
    "title": "Signals and Systems",
    "section": "Introduction: Discrete-Time Periodic Signals",
    "text": "Introduction: Discrete-Time Periodic Signals\nDiscrete-time (DT) signals \\(x[n]\\) are periodic with period \\(N\\) if \\(x[n] = x[n+N]\\).\nThe fundamental period \\(N\\) is the smallest positive integer for which this holds.\nThe fundamental frequency is \\(\\omega_0 = 2\\pi/N\\).\n\n\n\n\n\n\nNote\n\n\nKey Difference from Continuous-Time (CT): The Fourier series representation for discrete-time signals is a finite series, unlike the infinite series required for continuous-time signals. This simplifies convergence issues significantly.\n\n\n\n\nToday, we’re diving into the discrete-time Fourier series. Recall from Chapter 1 that a discrete-time signal is periodic if it repeats itself after a certain number of samples, denoted by \\(N\\). The fundamental frequency \\(\\omega_0\\) is directly related to this period \\(N\\). A crucial point to remember from the outset is that the DTFS is a finite sum, which has profound implications, especially regarding convergence, as we’ll see later."
  },
  {
    "objectID": "ss_36.html#harmonically-related-complex-exponentials",
    "href": "ss_36.html#harmonically-related-complex-exponentials",
    "title": "Signals and Systems",
    "section": "Harmonically Related Complex Exponentials",
    "text": "Harmonically Related Complex Exponentials\nThe set of all discrete-time complex exponential signals periodic with period \\(N\\) is given by:\n\\[ \\phi_k[n] = e^{j k \\omega_0 n} = e^{j k(2\\pi/N)n}, \\quad k = 0, \\pm 1, \\pm 2, \\ldots \\]\nThere are only \\(N\\) distinct signals in this set. This is because discrete-time complex exponentials differing by a multiple of \\(2\\pi\\) in frequency are identical.\n\\[ \\phi_k[n] = \\phi_{k+rN}[n] \\]\nThis means \\(e^{j k(2\\pi/N)n}\\) and \\(e^{j (k+N)(2\\pi/N)n}\\) are the same sequence.\n\nJust like in continuous time, we build our periodic signals from harmonically related complex exponentials. However, discrete-time is special. While \\(k\\) can theoretically go from negative to positive infinity, only \\(N\\) of these complex exponentials are unique. After \\(N\\) terms, the sequence of complex exponentials repeats itself. This is a direct consequence of the periodic nature of discrete-time exponentials. Let’s see an example."
  },
  {
    "objectID": "ss_36.html#demonstrating-distinct-exponentials",
    "href": "ss_36.html#demonstrating-distinct-exponentials",
    "title": "Signals and Systems",
    "section": "Demonstrating Distinct Exponentials",
    "text": "Demonstrating Distinct Exponentials\nLet’s visualize how \\(\\phi_k[n]\\) repeats for \\(k\\) and \\(k+N\\). Consider \\(N=5\\). We expect \\(\\phi_0[n] = \\phi_5[n]\\), \\(\\phi_1[n] = \\phi_6[n]\\), etc."
  },
  {
    "objectID": "ss_36.html#discrete-time-fourier-series-dtfs-synthesis",
    "href": "ss_36.html#discrete-time-fourier-series-dtfs-synthesis",
    "title": "Signals and Systems",
    "section": "Discrete-Time Fourier Series (DTFS) Synthesis",
    "text": "Discrete-Time Fourier Series (DTFS) Synthesis\nA periodic discrete-time signal \\(x[n]\\) can be represented as a linear combination of these harmonically related complex exponentials.\n\\[ x[n] = \\sum_{k=\\langle N\\rangle} a_k \\phi_k[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k \\omega_0 n} = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n} \\]\nThe notation \\(\\sum_{k=\\langle N\\rangle}\\) indicates summation over any set of \\(N\\) successive integers for \\(k\\). Common choices include \\(k=0, 1, \\ldots, N-1\\) or \\(k=- (N-1)/2, \\ldots, (N-1)/2\\) (for odd \\(N\\)).\nThe coefficients \\(a_k\\) are called the Fourier series coefficients.\n\nNow that we understand the building blocks, we can construct any periodic discrete-time signal using a sum of these exponentials. This equation is the synthesis equation. Notice the summation is over \\(N\\) terms. This is because, as we just saw, there are only \\(N\\) distinct complex exponentials. The specific range for \\(k\\) doesn’t change the set of exponentials used, only which \\(N\\) coefficients we’re solving for."
  },
  {
    "objectID": "ss_36.html#determination-of-dtfs-coefficients-12",
    "href": "ss_36.html#determination-of-dtfs-coefficients-12",
    "title": "Signals and Systems",
    "section": "Determination of DTFS Coefficients (1/2)",
    "text": "Determination of DTFS Coefficients (1/2)\nGiven \\(x[n]\\) periodic with fundamental period \\(N\\), we want to find \\(a_k\\).\nWe can solve a system of \\(N\\) linear equations, but a more direct method exists.\nThe key identity (similar to orthogonality in CT):\n\\[ \\sum_{n=\\langle N\\rangle} e^{j k(2\\pi/N)n} = \\begin{cases} N, & k = 0, \\pm N, \\pm 2N, \\ldots \\\\ 0, & \\text{otherwise} \\end{cases} \\]\nThis identity is crucial for isolating each \\(a_k\\).\n\nHow do we find these \\(a_k\\) coefficients? Similar to continuous time, we use an orthogonality property. This specific identity states that if you sum a complex exponential over one period, the result is zero unless the exponential is a constant (i.e., its frequency is a multiple of \\(2\\pi\\)). When it’s a constant, the sum is simply \\(N\\) times the constant. Let’s verify this interactively."
  },
  {
    "objectID": "ss_36.html#interactive-identity-verification",
    "href": "ss_36.html#interactive-identity-verification",
    "title": "Signals and Systems",
    "section": "Interactive Identity Verification",
    "text": "Interactive Identity Verification\nLet’s verify the summation identity: \\(\\sum_{n=\\langle N\\rangle} e^{j k(2\\pi/N)n}\\).\n\n\n\n\n\n\nTip\n\n\nExperiment:\nChange N_period and k_val in the code above and run it. Observe the sum. What happens when k_val is a multiple of N_period? What happens otherwise?\n\n\n\n\n\n\n\n\n\n\nThis interactive code block allows you to directly test the identity. When k_val is 0, the exponential is \\(e^0 = 1\\), and summing \\(N\\) ones gives \\(N\\). When k_val is a multiple of \\(N\\), for example \\(k=N\\), the exponential is \\(e^{jN(2\\pi/N)n} = e^{j2\\pi n} = 1\\) for all integer \\(n\\), so the sum is again \\(N\\). For any other \\(k\\), the terms \\(e^{j k(2\\pi/N)n}\\) will trace a full circle (or multiple full circles) in the complex plane, summing to zero over one period. This is a fundamental property."
  },
  {
    "objectID": "ss_36.html#determination-of-dtfs-coefficients-22",
    "href": "ss_36.html#determination-of-dtfs-coefficients-22",
    "title": "Signals and Systems",
    "section": "Determination of DTFS Coefficients (2/2)",
    "text": "Determination of DTFS Coefficients (2/2)\nTo derive \\(a_k\\):\n\nMultiply the synthesis equation by \\(e^{-j r(2\\pi/N)n}\\).\nSum over one period \\(n=\\langle N\\rangle\\).\n\n\\[ \\sum_{n=\\langle N\\rangle} x[n] e^{-j r(2\\pi/N)n} = \\sum_{n=\\langle N\\rangle} \\sum_{k=\\langle N\\rangle} a_k e^{j(k-r)(2\\pi/N)n} \\]\nInterchanging summation order and applying the identity:\n\\[ \\sum_{n=\\langle N\\rangle} x[n] e^{-j r(2\\pi/N)n} = \\sum_{k=\\langle N\\rangle} a_k \\left( \\sum_{n=\\langle N\\rangle} e^{j(k-r)(2\\pi/N)n} \\right) \\]\nThe inner sum is \\(N\\) if \\(k-r\\) is a multiple of \\(N\\) (i.e., \\(k=r\\) within the \\(\\langle N \\rangle\\) range), and \\(0\\) otherwise. This simplifies to \\(N a_r\\), leading to:\n\\[ a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n} \\]\nThis is the Discrete-Time Fourier Series Analysis Equation.\n\nWith that identity established, the derivation of the analysis equation is straightforward. We multiply the synthesis equation by a specific complex exponential, \\(e^{-j r(2\\pi/N)n}\\), and sum over one period. This process effectively “filters out” all terms except for the one corresponding to \\(a_r\\). The result is a direct formula to compute each \\(a_k\\) from the signal \\(x[n]\\)."
  },
  {
    "objectID": "ss_36.html#dtfs-synthesis-and-analysis-pair",
    "href": "ss_36.html#dtfs-synthesis-and-analysis-pair",
    "title": "Signals and Systems",
    "section": "DTFS Synthesis and Analysis Pair",
    "text": "DTFS Synthesis and Analysis Pair\nThese two equations form the Discrete-Time Fourier Series pair:\n\n\nSynthesis Equation:\n(How to build \\(x[n]\\) from coefficients \\(a_k\\))\n\\[ x[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k \\omega_0 n} = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n} \\]\n\nAnalysis Equation:\n(How to find coefficients \\(a_k\\) from \\(x[n]\\))\n\\[ a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k \\omega_0 n} = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n} \\]\n\n\n\n\n\n\n\nImportant\n\n\nThe Fourier series coefficients \\(a_k\\) are periodic with period \\(N\\): \\(a_k = a_{k+N}\\). This is a direct consequence of the periodicity of \\(\\phi_k[n]\\).\n\n\n\n\nHere we have the complete Discrete-Time Fourier Series pair. The synthesis equation tells us how to construct the signal from its frequency components, and the analysis equation tells us how to decompose the signal into those components. Crucially, remember the coefficients \\(a_k\\) themselves are periodic with period \\(N\\). This means if you calculate \\(a_0, a_1, \\ldots, a_{N-1}\\), you automatically know \\(a_N, a_{N+1}\\), etc., because they simply repeat."
  },
  {
    "objectID": "ss_36.html#example-3.10-discrete-time-sine-wave",
    "href": "ss_36.html#example-3.10-discrete-time-sine-wave",
    "title": "Signals and Systems",
    "section": "Example 3.10: Discrete-Time Sine Wave",
    "text": "Example 3.10: Discrete-Time Sine Wave\nConsider the signal \\(x[n] = \\sin(\\omega_0 n)\\). This signal is periodic only if \\(2\\pi/\\omega_0\\) is an integer (or ratio of integers). If \\(\\omega_0 = 2\\pi/N\\), then \\(x[n]\\) is periodic with fundamental period \\(N\\).\nWe can expand \\(x[n]\\) using Euler’s formula:\n\\[ x[n] = \\frac{1}{2j} e^{j(2\\pi/N)n} - \\frac{1}{2j} e^{-j(2\\pi/N)n} \\]\nBy comparing this with the synthesis equation \\(x[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n}\\), we can identify the coefficients:\n\\[ a_1 = \\frac{1}{2j}, \\quad a_{-1} = -\\frac{1}{2j} \\]\nAll other \\(a_k\\) (for \\(k\\) within one period) are zero.\n\nLet’s apply our new tools to an example. A discrete-time sine wave is only periodic under specific conditions related to its frequency. If \\(\\omega_0\\) is a multiple of \\(2\\pi/N\\), it’s periodic. By expressing the sine wave as a sum of two complex exponentials, we can directly compare it to the Fourier series synthesis equation and pick out the coefficients by inspection. This is a very common technique when the signal is already in the form of complex exponentials."
  },
  {
    "objectID": "ss_36.html#example-3.10-sine-wave-dtfs-visualization",
    "href": "ss_36.html#example-3.10-sine-wave-dtfs-visualization",
    "title": "Signals and Systems",
    "section": "Example 3.10: Sine Wave DTFS Visualization",
    "text": "Example 3.10: Sine Wave DTFS Visualization\nIf \\(\\omega_0 = (2\\pi M)/N\\) (where \\(M, N\\) are coprime), \\(x[n]\\) has fundamental period \\(N\\).\nThen, \\(a_M = \\frac{1}{2j}\\), \\(a_{-M} = -\\frac{1}{2j}\\), and other \\(a_k=0\\) within one period.\n\nviewof N_val = Inputs.range([5, 20], {\n  label: \"N:\",\n  step: 1,\n  value: 5\n})\n\nviewof M_val = Inputs.range([1, 4], {\n  label: \"M:\",\n  step: 1,\n  value: 1\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot visualizes the Fourier series coefficients for a discrete-time sine wave. You can adjust \\(N\\) (the period) and \\(M\\) (the multiplier for the fundamental frequency) using the sliders. Observe how only two coefficients are non-zero within any given period of \\(N\\). When \\(M=1\\), you see coefficients at \\(k=1\\) and \\(k=N-1\\) (which is equivalent to \\(k=-1\\)). When \\(M\\) changes, the locations of these non-zero coefficients shift to \\(k=M\\) and \\(k=N-M\\). Notice the magnitudes are always 0.5, and the phases are \\(\\pm 90^\\circ\\) (or \\(\\pm \\pi/2\\) radians), which corresponds to \\(\\pm j/2\\). This clearly illustrates the spectral content of a discrete-time sine wave."
  },
  {
    "objectID": "ss_36.html#example-3.11-more-complex-signal",
    "href": "ss_36.html#example-3.11-more-complex-signal",
    "title": "Signals and Systems",
    "section": "Example 3.11: More Complex Signal",
    "text": "Example 3.11: More Complex Signal\nConsider \\(x[n]=1+\\sin\\left(\\frac{2\\pi}{N}\\right)n+3\\cos\\left(\\frac{2\\pi}{N}\\right)n+\\cos\\left(\\frac{4\\pi}{N}n+\\frac{\\pi}{2}\\right)\\).\nThis signal is periodic with period \\(N\\).\nWe expand each term into complex exponentials:\n\\(1 \\implies a_0 = 1\\)\n\\(\\sin\\left(\\frac{2\\pi}{N}\\right)n \\implies a_1 = \\frac{1}{2j}, a_{-1} = -\\frac{1}{2j}\\)\n\\(3\\cos\\left(\\frac{2\\pi}{N}\\right)n \\implies a_1 = \\frac{3}{2}, a_{-1} = \\frac{3}{2}\\)\n\\(\\cos\\left(\\frac{4\\pi}{N}n+\\frac{\\pi}{2}\\right) \\implies \\frac{1}{2}e^{j\\pi/2}e^{j2(2\\pi/N)n} + \\frac{1}{2}e^{-j\\pi/2}e^{-j2(2\\pi/N)n}\\)\n\\(\\implies a_2 = \\frac{1}{2}e^{j\\pi/2} = \\frac{1}{2}j, a_{-2} = \\frac{1}{2}e^{-j\\pi/2} = -\\frac{1}{2}j\\)"
  },
  {
    "objectID": "ss_36.html#example-3.11-coefficients-visualization",
    "href": "ss_36.html#example-3.11-coefficients-visualization",
    "title": "Signals and Systems",
    "section": "Example 3.11: Coefficients Visualization",
    "text": "Example 3.11: Coefficients Visualization\nVisualizing the real, imaginary, magnitude, and phase of the coefficients for \\(N=10\\).\n\n\n\n\n\n\n\nHere we see a visual representation of the coefficients calculated in the previous slide. The top-left plot shows the real parts, and the bottom-left shows the imaginary parts. Notice the symmetry: Real parts are even (\\(Re\\{a_k\\} = Re\\{a_{-k}\\}\\)), and imaginary parts are odd (\\(Im\\{a_k\\} = -Im\\{a_{-k}\\}\\)). On the right, we have the magnitude and phase. Magnitudes are even (\\(|a_k| = |a_{-k}|\\)), and phases are odd (\\(Arg\\{a_k\\} = -Arg\\{a_{-k}\\}\\)). This visual confirms the conjugate symmetry property for real signals: \\(a_{-k} = a_k^*\\)."
  },
  {
    "objectID": "ss_36.html#example-3.12-discrete-time-periodic-square-wave",
    "href": "ss_36.html#example-3.12-discrete-time-periodic-square-wave",
    "title": "Signals and Systems",
    "section": "Example 3.12: Discrete-Time Periodic Square Wave",
    "text": "Example 3.12: Discrete-Time Periodic Square Wave\nConsider a discrete-time periodic square wave \\(x[n]\\) with period \\(N\\).\nIt is defined as \\(x[n]=1\\) for \\(-N_1 \\leq n \\leq N_1\\), and \\(x[n]=0\\) otherwise within one period.\nThe analysis equation is: \\[ a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n} \\]\nChoosing the summation range from \\(-N_1\\) to \\(N_1\\):\n\\[ a_k = \\frac{1}{N} \\sum_{n=-N_1}^{N_1} e^{-j k(2\\pi/N)n} \\]\nThis sum is a geometric series.\n\nLet’s analyze a common signal: the discrete-time periodic square wave. This signal is 1 for a certain duration around \\(n=0\\) and 0 otherwise within its period. To find its Fourier coefficients, we plug its definition into the analysis equation. The summation simplifies because \\(x[n]\\) is only non-zero for a specific range. The sum then becomes a geometric series, which we can solve using a known formula."
  },
  {
    "objectID": "ss_36.html#example-3.12-square-wave-coefficients",
    "href": "ss_36.html#example-3.12-square-wave-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.12: Square Wave Coefficients",
    "text": "Example 3.12: Square Wave Coefficients\nApplying the geometric series sum formula and simplifying, we get:\n\\[ a_k = \\frac{1}{N} \\frac{\\sin\\left[2\\pi k(N_1+1/2)/N\\right]}{\\sin(\\pi k/N)}, \\quad k \\neq 0, \\pm N, \\pm 2N, \\ldots \\]\nAnd for \\(k=0, \\pm N, \\pm 2N, \\ldots\\):\n\\[ a_k = \\frac{2N_1+1}{N} \\]\nThis formula resembles the continuous-time sinc function, but uses \\(\\sin(\\cdot)/\\sin(\\cdot)\\) due to discrete nature.\n\nAfter some algebraic manipulation, which involves using the geometric series sum formula and Euler’s identity, we arrive at this closed-form expression for the Fourier coefficients. It looks similar to the sinc function we encountered in continuous-time, but it’s a ratio of sines. This is typical for discrete-time Fourier transforms and series, as the discrete nature often leads to these periodic sinc-like functions. Note the special case for \\(k=0\\) (and its multiples), where the denominator would be zero if not handled separately. At \\(k=0\\), \\(a_0\\) represents the average value of the signal over one period, which is simply the number of non-zero samples (\\(2N_1+1\\)) divided by the total period (\\(N\\))."
  },
  {
    "objectID": "ss_36.html#example-3.12-coefficients-visualization",
    "href": "ss_36.html#example-3.12-coefficients-visualization",
    "title": "Signals and Systems",
    "section": "Example 3.12: Coefficients Visualization",
    "text": "Example 3.12: Coefficients Visualization\nLet’s visualize the coefficients for \\(2N_1+1=5\\) and varying \\(N\\).\n\nviewof N_val_sq = Inputs.range([10, 40], {\n  label: \"N (Period):\",\n  step: 5,\n  value: 10\n})\nviewof N1_val_sq = Inputs.range([1, 5], {\n  label: \"N1 (Pulse Half-Width):\",\n  step: 1,\n  value: 2\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot lets you see how the Fourier coefficients of a discrete-time square wave change with the period \\(N\\) and the pulse width \\(N_1\\). The shape of the coefficients resembles a sampled sinc function. As \\(N\\) increases (making the signal sparser in time), the coefficients become more closely spaced in frequency. The main lobe width is inversely proportional to the pulse width. Experiment with the sliders to see these effects. For instance, notice how the \\(a_k\\) values are scaled by \\(1/N\\)."
  },
  {
    "objectID": "ss_36.html#convergence-of-discrete-time-fourier-series",
    "href": "ss_36.html#convergence-of-discrete-time-fourier-series",
    "title": "Signals and Systems",
    "section": "Convergence of Discrete-Time Fourier Series",
    "text": "Convergence of Discrete-Time Fourier Series\nUnlike continuous-time Fourier series, discrete-time Fourier series have no convergence issues.\nThe DTFS is a finite sum of \\(N\\) terms.\nA discrete-time periodic sequence \\(x[n]\\) is completely specified by its \\(N\\) values over one period.\nThe DTFS analysis equation transforms these \\(N\\) values into \\(N\\) Fourier coefficients.\nThe DTFS synthesis equation perfectly reconstructs the original \\(N\\) values from these \\(N\\) coefficients.\n\n\n\n\n\n\nImportant\n\n\nThere is no Gibbs phenomenon in discrete-time Fourier series. The partial sum (if it includes all \\(N\\) distinct terms) will exactly equal \\(x[n]\\).\n\n\n\n\nThis is a critical distinction between continuous-time and discrete-time Fourier series. Because a discrete-time signal is defined by a finite number of samples within a period, its Fourier series also has a finite number of terms. This means that if you sum up all \\(N\\) terms of the DTFS, you will exactly reconstruct the original signal. There are no approximation errors, no ripples at discontinuities, and therefore, no Gibbs phenomenon. This makes DTFS mathematically much simpler in terms of convergence."
  },
  {
    "objectID": "ss_36.html#dtfs-reconstruction-no-gibbs-phenomenon",
    "href": "ss_36.html#dtfs-reconstruction-no-gibbs-phenomenon",
    "title": "Signals and Systems",
    "section": "DTFS Reconstruction: No Gibbs Phenomenon",
    "text": "DTFS Reconstruction: No Gibbs Phenomenon\nLet’s reconstruct the square wave using partial sums.\n\\(\\hat{x}[n] = \\sum_{k=-M}^{M} a_k e^{j k(2\\pi/N)n}\\) (for odd \\(N\\), \\(M=(N-1)/2\\) includes all terms).\n\nviewof N_rec = Inputs.range([5, 15], {\n  label: \"N (Period, odd):\",\n  step: 2,\n  value: 9\n})\n\nviewof N1_rec = Inputs.range([1, 3], {\n  label: \"N1 (Pulse Half-Width):\",\n  step: 1,\n  value: 2\n}) // Note: 2N1+1 should be &lt;= N\n\nviewof M_rec = Inputs.range([0, 4], {\n  label: \"M (Summation Terms):\",\n  step: 1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive demonstration highlights the key difference in convergence. We plot the original square wave and its reconstruction \\(\\hat{x}[n]\\) using a partial sum of \\(2M+1\\) terms. Adjust the M slider. Notice that as M increases, the reconstructed signal gets closer to the original. When M reaches its maximum value, which corresponds to including all \\(N\\) unique terms (e.g., \\(M=(N-1)/2\\) for odd \\(N\\)), the reconstructed signal perfectly matches the original signal. There are no overshoots or undershoots, no Gibbs phenomenon, because the series is finite and exact. This is a powerful advantage of the discrete-time Fourier series."
  },
  {
    "objectID": "ss_36.html#summary-and-key-takeaways",
    "href": "ss_36.html#summary-and-key-takeaways",
    "title": "Signals and Systems",
    "section": "Summary and Key Takeaways",
    "text": "Summary and Key Takeaways\nDiscrete-Time Fourier Series (DTFS):\n\nRepresents periodic discrete-time signals \\(x[n]\\) with period \\(N\\).\nUses a finite sum of \\(N\\) harmonically related complex exponentials.\n\nKey Equations:\n\nSynthesis: \\(x[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n}\\)\nAnalysis: \\(a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n}\\)\n\nCrucial Differences from Continuous-Time (CTFS):\n\nOnly \\(N\\) distinct complex exponentials \\(\\phi_k[n]\\).\nFourier coefficients \\(a_k\\) are periodic with period \\(N\\) (\\(a_k = a_{k+N}\\)).\nNo convergence issues or Gibbs phenomenon. The finite sum perfectly reconstructs \\(x[n]\\).\n\n\nTo summarize, the Discrete-Time Fourier Series is a powerful tool for analyzing periodic discrete-time signals. Its finite nature is its most distinguishing feature, leading to exact reconstruction and avoiding the convergence complexities of its continuous-time counterpart. Understanding these differences is crucial for working with sampled signals and discrete systems. Thank you."
  },
  {
    "objectID": "ss_36.html#demonstrating-distinct-exponentials-cont.",
    "href": "ss_36.html#demonstrating-distinct-exponentials-cont.",
    "title": "Signals and Systems",
    "section": "Demonstrating Distinct Exponentials (cont.)",
    "text": "Demonstrating Distinct Exponentials (cont.)\nThe plots show the real and imaginary parts of \\(\\phi_k[n]\\) for \\(k=1\\) and \\(k=1+N\\) (with \\(N=5\\)). Observe that the two plots are identical, confirming that \\(\\phi_k[n] = \\phi_{k+N}[n]\\).\n\n\n\n\n\n\nTip\n\n\nInteractive Element: Feel free to change \\(N_{val}\\) and \\(k\\) (by modifying the get_phi_k calls) in the Python code to explore this property further! For example, try \\(k=0\\) and \\(k=N_{val}\\).\n\n\n\n\nHere, we use Python to plot two complex exponentials. The top plot shows \\(\\phi_1[n]\\) for \\(N=5\\). The bottom plot shows \\(\\phi_{1+5}[n]\\), which is \\(\\phi_6[n]\\). As you can clearly see, both plots produce the exact same sequence of real and imaginary values. This visually demonstrates the periodicity of the discrete-time complex exponentials in the index \\(k\\). Try changing the value of N_val or the k value in the get_phi_k calls in the code block to see how this relationship holds. For instance, set k_val=0 and observe k_val=N_val for any N_val."
  },
  {
    "objectID": "ss_36.html#example-3.11-more-complex-signal-1",
    "href": "ss_36.html#example-3.11-more-complex-signal-1",
    "title": "Signals and Systems",
    "section": "Example 3.11: More Complex Signal",
    "text": "Example 3.11: More Complex Signal\nCombining terms for each \\(k\\):\n\\(a_0 = 1\\)\n\\(a_1 = \\frac{1}{2j} + \\frac{3}{2} = \\frac{3}{2} - \\frac{1}{2}j\\)\n\\(a_{-1} = -\\frac{1}{2j} + \\frac{3}{2} = \\frac{3}{2} + \\frac{1}{2}j\\)\n\\(a_2 = \\frac{1}{2}j\\)\n\\(a_{-2} = -\\frac{1}{2}j\\)\nAll other \\(a_k=0\\) within the period.\n\n\n\n\n\n\nTip\n\n\nProperty for Real Signals: For a real signal \\(x[n]\\), the Fourier coefficients exhibit conjugate symmetry: \\(a_{-k} = a_k^*\\). Verify this for the calculated coefficients!\n\n\n\n\nThis example shows how to find Fourier coefficients for a more complex signal by breaking it down into its constituent complex exponentials. Each sinusoidal component contributes two complex exponential terms, and the constant term contributes to \\(a_0\\). We then sum the coefficients for each harmonic index \\(k\\). Notice that \\(a_{-1}\\) is the complex conjugate of \\(a_1\\), and \\(a_{-2}\\) is the complex conjugate of \\(a_2\\). This is a general property for real-valued signals, known as conjugate symmetry."
  },
  {
    "objectID": "ss_3y.html#understanding-the-core-differences",
    "href": "ss_3y.html#understanding-the-core-differences",
    "title": "Signals and Systems",
    "section": "Understanding the Core Differences",
    "text": "Understanding the Core Differences\n\nWelcome back! Today, we’ll consolidate our understanding of Fourier series by directly comparing its continuous-time and discrete-time versions. While they share a common goal of decomposing periodic signals into a sum of harmonically related exponentials, their mathematical forms and inherent properties differ significantly. This comparison will highlight the unique characteristics of each and reinforce why these distinctions are important in ECE."
  },
  {
    "objectID": "ss_3y.html#continuous-time-fourier-series-ctfs-recap",
    "href": "ss_3y.html#continuous-time-fourier-series-ctfs-recap",
    "title": "Signals and Systems",
    "section": "Continuous-Time Fourier Series (CTFS) Recap",
    "text": "Continuous-Time Fourier Series (CTFS) Recap\nFor a periodic CT signal \\(x(t)\\) with fundamental period \\(T_0\\) and fundamental frequency \\(\\omega_0 = 2\\pi/T_0\\).\n\n\nSynthesis Equation:\n(Reconstruction from coefficients)\n\\[ x(t) = \\sum_{k=-\\infty}^{\\infty} a_k e^{j k \\omega_0 t} \\]\n\nAnalysis Equation:\n(Calculation of coefficients)\n\\[ a_k = \\frac{1}{T_0} \\int_{T_0} x(t) e^{-j k \\omega_0 t} dt \\]\n\n\n\n\n\n\n\nNote\n\n\nKey Characteristics:\n\nInfinite series: Requires summing an infinite number of terms.\nConvergence issues: Partial sums may not perfectly reconstruct \\(x(t)\\), especially at discontinuities.\nGibbs phenomenon: Overshoots/undershoots near discontinuities in partial sums.\n\n\n\n\n\nLet’s quickly review the CTFS. The synthesis equation shows that any periodic continuous-time signal can be expressed as an infinite sum of complex exponentials. The analysis equation provides the formula to calculate the coefficients \\(a_k\\) by integrating the signal over one period, weighted by a complex exponential. The key takeaways here are the infinite nature of the series, which leads to potential convergence issues and the infamous Gibbs phenomenon at discontinuities when only a finite number of terms are used for reconstruction."
  },
  {
    "objectID": "ss_3y.html#discrete-time-fourier-series-dtfs-recap",
    "href": "ss_3y.html#discrete-time-fourier-series-dtfs-recap",
    "title": "Signals and Systems",
    "section": "Discrete-Time Fourier Series (DTFS) Recap",
    "text": "Discrete-Time Fourier Series (DTFS) Recap\nFor a periodic DT signal \\(x[n]\\) with fundamental period \\(N\\) and fundamental frequency \\(\\omega_0 = 2\\pi/N\\).\n\n\nSynthesis Equation:\n(Reconstruction from coefficients)\n\\[ x[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k \\omega_0 n} = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n} \\]\n\nAnalysis Equation:\n(Calculation of coefficients)\n\\[ a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k \\omega_0 n} = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n} \\]\n\n\n\n\n\n\n\nNote\n\n\nKey Characteristics:\n\nFinite series: Sums only \\(N\\) distinct terms.\nNo convergence issues: The finite sum perfectly reconstructs \\(x[n]\\).\nNo Gibbs phenomenon: Exact reconstruction with all \\(N\\) terms.\nCoefficients are periodic: \\(a_k = a_{k+N}\\).\n\n\n\n\n\nNow, for the DTFS. Again, we have synthesis and analysis equations, but with crucial differences. The summation in the synthesis equation is explicitly shown as a finite sum over \\(N\\) consecutive values of \\(k\\). The analysis equation involves a summation over \\(N\\) samples of the signal, rather than an integral. The most important characteristics are the finite nature of the series, which means no convergence issues and no Gibbs phenomenon. Also, remember that the coefficients \\(a_k\\) themselves are periodic with period \\(N\\)."
  },
  {
    "objectID": "ss_3y.html#ctfs-vs.-dtfs-a-side-by-side-comparison",
    "href": "ss_3y.html#ctfs-vs.-dtfs-a-side-by-side-comparison",
    "title": "Signals and Systems",
    "section": "CTFS vs. DTFS: A Side-by-Side Comparison",
    "text": "CTFS vs. DTFS: A Side-by-Side Comparison\n\n\nContinuous-Time Fourier Series (CTFS)\n\nSignal: \\(x(t)\\) (continuous-time)\nPeriod: \\(T_0\\)\nFundamental Freq: \\(\\omega_0 = 2\\pi/T_0\\)\nSeries Type: Infinite sum \\[ x(t) = \\sum_{k=-\\infty}^{\\infty} a_k e^{j k \\omega_0 t} \\]\nCoefficient Calculation: Integral \\[ a_k = \\frac{1}{T_0} \\int_{T_0} x(t) e^{-j k \\omega_0 t} dt \\]\nConvergence: Requires conditions, partial sums approximate \\(x(t)\\).\nGibbs Phenomenon: Present at discontinuities for partial sums.\nCoefficients periodicity: \\(a_k\\) are generally not periodic.\n\n\nDiscrete-Time Fourier Series (DTFS)\n\nSignal: \\(x[n]\\) (discrete-time)\nPeriod: \\(N\\)\nFundamental Freq: \\(\\omega_0 = 2\\pi/N\\)\nSeries Type: Finite sum (N terms) \\[ x[n] = \\sum_{k=\\langle N\\rangle} a_k e^{j k(2\\pi/N)n} \\]\nCoefficient Calculation: Summation \\[ a_k = \\frac{1}{N} \\sum_{n=\\langle N\\rangle} x[n] e^{-j k(2\\pi/N)n} \\]\nConvergence: Always exact with \\(N\\) terms.\nGibbs Phenomenon: Not present.\nCoefficients periodicity: \\(a_k\\) are periodic with period \\(N\\).\n\n\n\nThis slide provides a concise summary of the key differences. Notice the fundamental distinction between integrals and summations, and the implications of infinite versus finite series. The periodicity of coefficients in DTFS is also a unique and important property."
  },
  {
    "objectID": "ss_3y.html#example-periodic-square-wave-ctfs",
    "href": "ss_3y.html#example-periodic-square-wave-ctfs",
    "title": "Signals and Systems",
    "section": "Example: Periodic Square Wave (CTFS)",
    "text": "Example: Periodic Square Wave (CTFS)\nConsider a CT periodic square wave \\(x(t)\\) with period \\(T_0\\), amplitude \\(A=1\\), and pulse width \\(T_1\\).\nLet \\(T_0=1\\) and \\(T_1=0.5\\).\nThe Fourier series coefficients are given by:\n\\[ a_k = \\frac{A T_1}{T_0} \\text{sinc}\\left(k \\frac{T_1}{T_0}\\right) = \\frac{A T_1}{T_0} \\frac{\\sin(\\pi k T_1/T_0)}{\\pi k T_1/T_0} \\]\nFor \\(k=0\\), \\(a_0 = \\frac{A T_1}{T_0}\\).\n\nTo illustrate these concepts, let’s use a common signal: the periodic square wave. For continuous time, the coefficients are given by a sinc function. This means the spectrum is continuous-like, decaying as \\(k\\) increases, with zero crossings. Let’s visualize this."
  },
  {
    "objectID": "ss_3y.html#ctfs-square-wave-visualization",
    "href": "ss_3y.html#ctfs-square-wave-visualization",
    "title": "Signals and Systems",
    "section": "CTFS: Square Wave Visualization",
    "text": "CTFS: Square Wave Visualization\nHere we visualize the CT square wave and its Fourier coefficients.\n\nviewof A_ct = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof T0_ct = Inputs.number([0.1, 5], {\n  label: \"T0 (Fundamental Period):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof T1_ct = Inputs.number([0.1, 2], {\n  label: \"T1 (Pulse Width):\",\n  step: 0.1,\n  value: 0.5\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe top plot shows the continuous-time periodic square wave. The bottom plot shows the magnitudes of its Fourier series coefficients. Notice that the coefficients form a continuous envelope (the sinc function), but are only defined at discrete harmonic frequencies \\(k\\omega_0\\). This spectrum extends to infinity, with the magnitudes decreasing as \\(k\\) increases."
  },
  {
    "objectID": "ss_3y.html#example-periodic-square-wave-dtfs",
    "href": "ss_3y.html#example-periodic-square-wave-dtfs",
    "title": "Signals and Systems",
    "section": "Example: Periodic Square Wave (DTFS)",
    "text": "Example: Periodic Square Wave (DTFS)\nConsider a DT periodic square wave \\(x[n]\\) with period \\(N\\), amplitude \\(A=1\\), and pulse width \\(P\\).\nLet \\(N=10\\) and \\(P=5\\) (i.e., \\(2N_1+1=5 \\implies N_1=2\\)).\nThe Fourier series coefficients are given by:\n\\[ a_k = \\frac{A}{N} \\frac{\\sin(\\pi k P/N)}{\\sin(\\pi k/N)}, \\quad k \\neq 0, \\pm N, \\pm 2N, \\ldots \\]\nFor \\(k=0, \\pm N, \\ldots\\):\n\\[ a_k = \\frac{A P}{N} \\]\n\nNow, let’s look at the discrete-time equivalent. We define a square wave in discrete time, with period \\(N\\) and pulse width \\(P\\). The formula for its coefficients is a ratio of sines, which is the discrete-time equivalent of the sinc function. Let’s visualize this."
  },
  {
    "objectID": "ss_3y.html#dtfs-square-wave-visualization",
    "href": "ss_3y.html#dtfs-square-wave-visualization",
    "title": "Signals and Systems",
    "section": "DTFS: Square Wave Visualization",
    "text": "DTFS: Square Wave Visualization\nHere we visualize the DT square wave and its Fourier coefficients.\n\nviewof A_dt = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof N_dt = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\n\nviewof P_dt = Inputs.number([1, 15], {\n  label: \"P (Pulse Width, 2N1+1):\",\n  step: 1,\n  value: 5\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere, we see the discrete-time square wave and its Fourier coefficients. Notice that the signal \\(x[n]\\) is a sequence of points. The coefficients \\(|a_k|\\) are also a sequence of points, and there are only \\(N\\) distinct coefficients (from \\(k=0\\) to \\(N-1\\)). This spectrum is periodic, meaning the pattern of coefficients from \\(0\\) to \\(N-1\\) repeats for \\(N\\) to \\(2N-1\\), and so on. This is a direct consequence of the discrete nature of the time signal."
  },
  {
    "objectID": "ss_3y.html#visual-comparison-ctfs-vs.-dtfs-coefficients",
    "href": "ss_3y.html#visual-comparison-ctfs-vs.-dtfs-coefficients",
    "title": "Signals and Systems",
    "section": "Visual Comparison: CTFS vs. DTFS Coefficients",
    "text": "Visual Comparison: CTFS vs. DTFS Coefficients\n\n\nCTFS Coefficients (k continuous envelope)\n\nviewof A_ct_comp = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof T0_ct_comp = Inputs.number([0.1, 5], {\n  label: \"T0 (Fundamental Period):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof T1_ct_comp = Inputs.number([0.1, 2], {\n  label: \"T1 (Pulse Width):\",\n  step: 0.1,\n  value: 0.5\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDTFS Coefficients (k sampled points)\n\nviewof A_dt_comp = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof N_dt_comp = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\n\nviewof P_dt_comp = Inputs.number([1, 15], {\n  label: \"P (Pulse Width, 2N1+1):\",\n  step: 1,\n  value: 5\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere’s a direct visual comparison of the coefficient magnitudes. The CTFS coefficients follow a continuous sinc envelope, meaning that if we were to take more and more harmonics, they would fill out this shape. The DTFS coefficients, however, are discrete samples of a similar envelope, but they are also periodic. This “sampling” of the frequency domain is a direct consequence of the time-domain signal being discrete."
  },
  {
    "objectID": "ss_3y.html#reconstruction-gibbs-phenomenon-ctfs",
    "href": "ss_3y.html#reconstruction-gibbs-phenomenon-ctfs",
    "title": "Signals and Systems",
    "section": "Reconstruction & Gibbs Phenomenon (CTFS)",
    "text": "Reconstruction & Gibbs Phenomenon (CTFS)\nUsing only a finite number of terms to reconstruct a CT square wave will show the Gibbs phenomenon.\n\n\n\nviewof A_ct_rec = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\nviewof T0_ct_rec = Inputs.number([0.1, 5], {\n  label: \"T0 (Fundamental Period):\",\n  step: 0.1,\n  value: 1\n})\nviewof T1_ct_rec = Inputs.number([0.1, 2], {\n  label: \"T1 (Pulse Width):\",\n  step: 0.1,\n  value: 0.5\n})\nviewof K_rec_ct = Inputs.range([1, 20], {\n  label: \"Number of Harmonics (K):\",\n  step: 1,\n  value: 1\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot demonstrates the reconstruction of a CT square wave. Adjust the K slider to change the number of harmonics used in the reconstruction. As you increase K, the reconstructed signal gets closer to the original, but notice the prominent overshoots and undershoots near the discontinuities. This is the Gibbs phenomenon, which persists even with a large number of terms, though it becomes narrower. It highlights the difficulty of representing sharp transitions with a finite sum of smooth sinusoids."
  },
  {
    "objectID": "ss_3y.html#reconstruction-no-gibbs-phenomenon-dtfs",
    "href": "ss_3y.html#reconstruction-no-gibbs-phenomenon-dtfs",
    "title": "Signals and Systems",
    "section": "Reconstruction & No Gibbs Phenomenon (DTFS)",
    "text": "Reconstruction & No Gibbs Phenomenon (DTFS)\nUsing all \\(N\\) terms perfectly reconstructs a DT periodic square wave.\n\n\n\nviewof A_dt_rec = Inputs.number([0, 5], {\n  label: \"A (Amplitude):\",\n  step: 0.1,\n  value: 1\n})\n\nviewof N_dt_rec = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\nviewof P_dt_rec = Inputs.number([1, 15], {\n  label: \"P (Pulse Width, 2N1+1):\",\n  step: 1,\n  value: 5\n})\n\nviewof M_rec_dt = Inputs.range([0, 4], {\n  label: \"Number of Terms (M):\",\n  step: 1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn contrast to CTFS, the DTFS reconstruction behaves very differently. Adjust the M slider, which controls the number of terms used (from 1 to \\(N\\)). As you increase the number of terms, the reconstructed signal quickly converges. Once you include all \\(N\\) distinct terms (e.g., when the slider is at its maximum value for \\(N=10\\)), the reconstructed signal perfectly matches the original signal. There are no Gibbs phenomena or approximation errors. This exact reconstruction is a hallmark of the discrete-time Fourier series."
  },
  {
    "objectID": "ss_3y.html#conclusion-and-key-takeaways",
    "href": "ss_3y.html#conclusion-and-key-takeaways",
    "title": "Signals and Systems",
    "section": "Conclusion and Key Takeaways",
    "text": "Conclusion and Key Takeaways\n\n\nCTFS: The Infinite Spectroscope\n\nInfinite number of harmonic components.\nContinuous spectrum envelope (sinc for square wave).\nApproximation when using finite terms.\nGibbs phenomenon at discontinuities.\nUsed for analyzing analog signals in continuous systems.\n\n\nDTFS: The Finite Spectrum Analyzer\n\nFinite number (\\(N\\)) of distinct harmonic components.\nDiscrete spectrum (sampled sinc for square wave), which is periodic.\nExact reconstruction with all \\(N\\) terms.\nNo Gibbs phenomenon.\nUsed for analyzing sampled signals and discrete systems.\n\n\n\n\n\n\n\n\nTip\n\n\nAnalogy:\nThink of CTFS as trying to describe a smooth painting with an infinite palette of colors, while DTFS is like describing a pixelated image with a finite, repeating set of colors.\n\n\n\n\nTo wrap up, remember these core differences. CTFS deals with continuous signals and infinite spectra, leading to approximations and Gibbs phenomenon with finite terms. DTFS deals with discrete signals, has a finite, periodic spectrum, and provides exact reconstruction with all its terms. These distinctions are fundamental to understanding signal processing in both analog and digital domains. Thank you for your attention!"
  },
  {
    "objectID": "ss_37.html#introduction-to-dtfs-properties",
    "href": "ss_37.html#introduction-to-dtfs-properties",
    "title": "Signals and Systems",
    "section": "Introduction to DTFS Properties",
    "text": "Introduction to DTFS Properties\nThere are strong similarities between the properties of discrete-time (DT) and continuous-time (CT) Fourier series.\nUnderstanding these properties is crucial for the analysis, synthesis, and interpretation of discrete-time signals.\nWe will explore key properties of DTFS and their applications in Electrical and Computer Engineering."
  },
  {
    "objectID": "ss_37.html#dtfs-properties-overview",
    "href": "ss_37.html#dtfs-properties-overview",
    "title": "Signals and Systems",
    "section": "DTFS Properties: Overview",
    "text": "DTFS Properties: Overview\nHere’s a summary of important properties for Discrete-Time Fourier Series.\nNotice that both the periodic signal \\(x[n]\\) and its Fourier coefficients \\(a_k\\) are periodic with period \\(N\\).\n\n\n\n\n\n\nTip\n\n\nRecall:\nA discrete-time signal \\(x[n]\\) is periodic with period \\(N\\) if \\(x[n] = x[n+N]\\) for all \\(n\\).\nIts DTFS coefficients \\(a_k\\) are also periodic with period \\(N\\), meaning \\(a_k = a_{k+N}\\).\n\n\n\n\n\n\n\n\nThis table provides a comprehensive overview of DTFS properties. While many are analogous to CTFS properties, some, like the multiplication property, have discrete-time specific forms. We will discuss a few of these in detail, particularly those that highlight key differences or offer significant advantages in problem-solving."
  },
  {
    "objectID": "ss_37.html#shorthand-notation-for-dtfs",
    "href": "ss_37.html#shorthand-notation-for-dtfs",
    "title": "Signals and Systems",
    "section": "Shorthand Notation for DTFS",
    "text": "Shorthand Notation for DTFS\nTo concisely indicate the relationship between a periodic signal and its Fourier series coefficients, we use a shorthand notation.\nIf \\(x[n]\\) is a periodic signal with period \\(N\\) and its Fourier series coefficients are denoted by \\(a_k\\), we write:\n\\[\nx[n] \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{k}\n\\]\nThis notation signifies a Fourier Series pair, where \\(x[n]\\) is the signal in the time domain, and \\(a_k\\) represents its spectral components in the frequency domain.\n\nThis notation is a standard convention in Signals and Systems. It allows us to quickly represent the transformation between the time and frequency domains without writing out the full synthesis and analysis equations every time."
  },
  {
    "objectID": "ss_37.html#multiplication-property",
    "href": "ss_37.html#multiplication-property",
    "title": "Signals and Systems",
    "section": "Multiplication Property",
    "text": "Multiplication Property\nIf \\(x[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} a_k\\) and \\(y[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} b_k\\), both periodic with period \\(N\\).\nThen \\(x[n] y[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} d_k\\), where \\(d_k\\) is given by periodic convolution:\n\\[ d_k = \\sum_{l=\\langle N\\rangle} a_l b_{k-l} \\]\n\n\n\n\n\n\nImportant\n\n\nKey Difference from CTFS:\nIn CTFS, multiplication in time domain corresponds to aperiodic convolution of coefficients.\nIn DTFS, it corresponds to periodic convolution of coefficients, meaning the summation is over \\(N\\) terms and coefficients \\(b_k\\) are considered periodic.\n\n\n\n\nThe multiplication property is one of the most important distinctions between CTFS and DTFS. While both involve convolution in the frequency domain, DTFS uses periodic convolution. This means that when we calculate \\(b_{k-l}\\), we treat \\(b\\) as a periodic sequence. This property is crucial in understanding how mixing signals in the time domain affects their spectral components, such as in modulation."
  },
  {
    "objectID": "ss_37.html#first-difference-property",
    "href": "ss_37.html#first-difference-property",
    "title": "Signals and Systems",
    "section": "First Difference Property",
    "text": "First Difference Property\nIf \\(x[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} a_k\\), then \\(x[n]-x[n-1] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} (1-e^{-j k(2\\pi/N)}) a_k\\).\nThis is the discrete-time parallel to the differentiation property in continuous time.\n\n\n\n\n\n\nTip\n\n\nThis property is useful when the first difference of a signal is simpler to analyze than the original signal itself, often simplifying coefficient calculation.\n\n\n\nLet’s see how the first difference affects the spectrum of a discrete-time ramp signal.\n\n\n\n// Define N for DT ramp\nviewof N_diff = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the top plot, you see a periodic ramp signal and its first difference. The first difference of a ramp is a constant (except for the wrap-around point), which is a much simpler signal. Observe the bottom plot: the magnitudes of the coefficients for the first difference signal are significantly altered compared to the original ramp. This property effectively scales the coefficients by a frequency-dependent term, often leading to a “flatter” or simpler spectrum for signals with sharp transitions when differenced. For example, the DC component (\\(k=0\\)) of the difference signal is very small (ideally zero for a perfect step), which is reflected in its coefficient."
  },
  {
    "objectID": "ss_37.html#parsevals-relation-for-discrete-time-signals",
    "href": "ss_37.html#parsevals-relation-for-discrete-time-signals",
    "title": "Signals and Systems",
    "section": "Parseval’s Relation for Discrete-Time Signals",
    "text": "Parseval’s Relation for Discrete-Time Signals\nParseval’s relation is a fundamental conservation law in signal processing, connecting energy (or power) across domains.\nIt states that the average power of a periodic signal in the time domain is equal to the sum of the average powers of its harmonic components in the frequency domain.\nFor a discrete-time periodic signal \\(x[n]\\) with period \\(N\\) and Fourier series coefficients \\(a_k\\):\n\\[\n\\frac{1}{N} \\sum_{n=\\langle N\\rangle}|x[n]|^{2}=\\sum_{k=\\langle N\\rangle}\\left|a_{k}\\right|^{2} \\quad \\text{(3.110)}\n\\]\nThe left-hand side calculates the average power of \\(x[n]\\) over one period.\nThe right-hand side sums the average powers of each of the \\(N\\) distinct harmonic components, \\(|a_k|^2\\).\n\n\n\n\n\n\nNote\n\n\nMeaning:\nThe total average power contained within a periodic signal is preserved, whether measured in the time domain or distributed across its frequency components.\n\n\n\n\nThis relation is incredibly powerful. It implies that if a signal has finite power, then its Fourier series coefficients must also result in finite power. It’s a cornerstone for understanding energy distribution in signals and is used extensively in spectral analysis and filter design."
  },
  {
    "objectID": "ss_37.html#examples-illustrating-dtfs-properties",
    "href": "ss_37.html#examples-illustrating-dtfs-properties",
    "title": "Signals and Systems",
    "section": "Examples Illustrating DTFS Properties",
    "text": "Examples Illustrating DTFS Properties\nLet’s apply these properties to solve some practical problems and gain deeper insights into their utility. These examples will demonstrate how properties can simplify the process of determining Fourier series coefficients and characterizing signals.\nWe will use concepts like signal decomposition, minimum power constraints, and periodic convolution."
  },
  {
    "objectID": "ss_37.html#example-3.13-linearity-property",
    "href": "ss_37.html#example-3.13-linearity-property",
    "title": "Signals and Systems",
    "section": "Example 3.13: Linearity Property",
    "text": "Example 3.13: Linearity Property\nProblem: Find the Fourier series coefficients \\(a_k\\) of the sequence \\(x[n]\\) shown in Figure 3.19(a).\nThis sequence has a fundamental period of \\(N=5\\).\n\n\nWe can express \\(x[n]\\) as the sum of two simpler sequences:\n\nA square wave \\(x_1[n]\\) (Figure 3.19(b)).\nA DC sequence \\(x_2[n]\\) (Figure 3.19(c)).\n\n\\[\nx[n] = x_1[n] + x_2[n]\n\\]\nBy the linearity property, if \\(x_1[n] \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} b_k\\) and \\(x_2[n] \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} c_k\\), then the coefficients \\(a_k\\) for \\(x[n]\\) are simply:\n\\[\na_k = b_k + c_k \\quad \\text{(3.111)}\n\\]\n\n\n  \n\n\n\nThis example effectively demonstrates the power of the linearity property. Instead of directly calculating the Fourier series for the somewhat complex signal \\(x[n]\\), we decompose it into two simpler signals, calculate their individual Fourier series, and then sum them. This often significantly reduces the complexity of the problem."
  },
  {
    "objectID": "ss_37.html#example-3.13-calculating-coefficients",
    "href": "ss_37.html#example-3.13-calculating-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.13: Calculating Coefficients",
    "text": "Example 3.13: Calculating Coefficients\nLet’s find \\(b_k\\) for \\(x_1[n]\\) and \\(c_k\\) for \\(x_2[n]\\).\n\n\nFor \\(x_1[n]\\) (square wave): From a known result (e.g., Example 3.12, with \\(N_1=1\\) and \\(N=5\\)), the Fourier series coefficients \\(b_k\\) are:\n\\[\nb_{k}= \\begin{cases}\\frac{1}{5} \\frac{\\sin (3 \\pi k / 5)}{\\sin (\\pi k / 5)}, & \\text { for } k \\neq 0, \\pm 5, \\ldots \\\\ \\frac{3}{5}, & \\text { for } k=0, \\pm 5, \\ldots\\end{cases} \\quad \\text{(3.112)}\n\\]\nFor \\(x_2[n]\\) (DC sequence): \\(x_2[n]\\) is a constant sequence of value 1 for all \\(n\\). Its DC component (for \\(k=0\\)) is:\n\\[\nc_0 = \\frac{1}{N} \\sum_{n=0}^{N-1} x_2[n] = \\frac{1}{5} \\sum_{n=0}^{4} 1 = 1 \\quad \\text{(3.113)}\n\\] Since \\(x_2[n]\\) is purely a DC signal, all other coefficients \\(c_k\\) are zero, except for integer multiples of \\(N\\). So, \\(c_k = 1\\) for \\(k=0, \\pm 5, \\ldots\\) and \\(0\\) otherwise.\n\nCombining \\(b_k\\) and \\(c_k\\) to get \\(a_k\\):\nFor \\(k \\neq 0, \\pm 5, \\ldots\\): \\(a_k = b_k + c_k = \\frac{1}{5} \\frac{\\sin (3 \\pi k / 5)}{\\sin (\\pi k / 5)} + 0 = \\frac{1}{5} \\frac{\\sin (3 \\pi k / 5)}{\\sin (\\pi k / 5)}\\)\nFor \\(k = 0, \\pm 5, \\ldots\\): \\(a_k = b_k + c_k = \\frac{3}{5} + 1 = \\frac{8}{5}\\)\nThus, the final Fourier series coefficients \\(a_k\\) for \\(x[n]\\) are:\n\\[\na_{k}=\\left\\{\\begin{array}{ll}\n\\frac{1}{5} \\frac{\\sin (3 \\pi k / 5)}{\\sin (\\pi k / 5)}, & \\text { for } k \\neq 0, \\pm 5, \\ldots \\\\\n\\frac{8}{5}, & \\text { for } k=0, \\pm 5, \\ldots\n\\end{array} \\quad \\text{(3.114)}\n\\right.\n\\]\n\n\nThis slide walks through the specific calculations for each component signal. It’s important to remember that for a DC signal, only the \\(k=0\\) (and its periodic replicas) Fourier coefficient is non-zero. The periodicity of the coefficients is key here, as \\(c_k = 1\\) not just for \\(k=0\\), but also for \\(k=\\pm 5, \\pm 10\\), etc."
  },
  {
    "objectID": "ss_37.html#example-3.13-interactive-plot-of-signals",
    "href": "ss_37.html#example-3.13-interactive-plot-of-signals",
    "title": "Signals and Systems",
    "section": "Example 3.13: Interactive Plot of Signals",
    "text": "Example 3.13: Interactive Plot of Signals\nLet’s visualize the signals \\(x[n]\\), \\(x_1[n]\\), and \\(x_2[n]\\) over one period to confirm their relationship.\n\n```{ojs}\n// Load Plotly.js for interactive plots\nawait require.alias({\n  \"plotly.js\": \"https://cdn.plot.ly/plotly-2.32.0.min.js\"\n}).resolve(\"plotly.js\");\n\n// Define a function to plot discrete signals, if not already defined\nif (typeof plot_discrete_signal === 'undefined') {\n  function plot_discrete_signal(data, title, y_label) {\n    return Plotly.newPlot(\n      html`&lt;div style=\"width:100%;height:300px;\"&gt;&lt;/div&gt;`,\n      [{\n        x: data.n,\n        y: data.values,\n        mode: 'markers',\n        marker: { size: 8 },\n        type: 'scatter'\n      }],\n      {\n        title: title,\n        xaxis: { title: 'n' },\n        yaxis: { title: y_label },\n        margin: { t: 40, b: 40, l: 40, r: 40 }\n      }\n    );\n  }\n}\n```\n\n\n\n\n\n\n\nOJS Syntax Error (line 260, column 1)Unexpected token\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot_discrete_signal(x_n_data, 'Sequence x[n]', 'Amplitude');\n\n\n\n\n\n\n\nplot_discrete_signal(x1_n_data, 'Sequence x1[n] (Square Wave)', 'Amplitude');\n\n\n\n\n\n\n\nplot_discrete_signal(x2_n_data, 'Sequence x2[n] (DC Component)', 'Amplitude');\n\n\n\n\n\n\n\n\n\nThis interactive section allows students to visually confirm the decomposition of \\(x[n]\\) into \\(x_1[n]\\) and \\(x_2[n]\\). It reinforces the linearity concept by showing how the components sum up to the original signal. The Python code calculates the signal values, and Observable.js with Plotly renders them dynamically in the browser."
  },
  {
    "objectID": "ss_37.html#example-3.14-minimum-power-and-dtfs",
    "href": "ss_37.html#example-3.14-minimum-power-and-dtfs",
    "title": "Signals and Systems",
    "section": "Example 3.14: Minimum Power and DTFS",
    "text": "Example 3.14: Minimum Power and DTFS\nProblem: Determine a sequence \\(x[n]\\) given the following facts:\n\n\\(x[n]\\) is periodic with period \\(N=6\\).\n\\(\\sum_{n=0}^{5} x[n]=2\\).\n\\(\\sum_{n=2}^{7}(-1)^{n} x[n]=1\\).\n\\(x[n]\\) has the minimum power per period among all signals satisfying the above three conditions.\n\nSolution Strategy: We can use the properties of Fourier series coefficients \\(a_k\\) and Parseval’s relation to solve this problem.\nFrom Fact 2: The sum over one period is directly related to the DC component \\(a_0\\).\nThe DTFS analysis equation for \\(a_0\\) is \\(a_0 = \\frac{1}{N} \\sum_{n=0}^{N-1} x[n]\\). So, \\(a_0 = \\frac{1}{6} \\times 2 = \\frac{1}{3}\\).\nFrom Fact 3: The alternating sum provides information about another Fourier coefficient.\nNote that \\((-1)^n = e^{-j\\pi n} = e^{-j(2\\pi/6)3n}\\). This term corresponds to the \\(k=3\\) harmonic.\nDue to periodicity, \\(\\sum_{n=2}^{7}(-1)^{n} x[n]\\) is equivalent to \\(\\sum_{n=0}^{5}(-1)^{n} x[n]\\).\nThe general DTFS analysis equation is \\(a_k = \\frac{1}{N} \\sum_{n=0}^{N-1} x[n] e^{-j k (2\\pi/N) n}\\).\nFor \\(k=3\\): \\(a_3 = \\frac{1}{6} \\sum_{n=0}^{5} x[n] e^{-j (2\\pi/6) 3 n} = \\frac{1}{6} \\sum_{n=0}^{5} x[n] e^{-j \\pi n} = \\frac{1}{6} \\sum_{n=0}^{5} x[n] (-1)^n\\).\nGiven that this sum is 1, we find \\(a_3 = \\frac{1}{6} \\times 1 = \\frac{1}{6}\\).\n\nThis slide demonstrates how constraints on a signal in the time domain translate directly into constraints on its Fourier series coefficients. Recognizing the exponential form of \\((-1)^n\\) is key to linking the sum in Fact 3 to a specific Fourier coefficient. The periodicity allows us to adjust the summation limits."
  },
  {
    "objectID": "ss_37.html#example-3.14-minimum-power-and-signal-reconstruction",
    "href": "ss_37.html#example-3.14-minimum-power-and-signal-reconstruction",
    "title": "Signals and Systems",
    "section": "Example 3.14: Minimum Power and Signal Reconstruction",
    "text": "Example 3.14: Minimum Power and Signal Reconstruction\nWe have determined that \\(a_0 = 1/3\\) and \\(a_3 = 1/6\\).\nFrom Parseval’s relation, the average power in \\(x[n]\\) is:\n\\[\nP=\\frac{1}{N} \\sum_{n=\\langle N\\rangle}|x[n]|^{2}=\\sum_{k=0}^{N-1}\\left|a_{k}\\right|^{2} = \\sum_{k=0}^{5}\\left|a_{k}\\right|^{2} \\quad \\text{(3.115)}\n\\]\nTo minimize the total average power \\(P\\), given that \\(a_0\\) and \\(a_3\\) are fixed, all other coefficients \\(a_k\\) (i.e., \\(a_1, a_2, a_4, a_5\\)) must be zero.\nNow, we reconstruct \\(x[n]\\) using the inverse DTFS synthesis equation:\n\\[\nx[n] = \\sum_{k=0}^{N-1} a_k e^{j k (2\\pi/N) n}\n\\]\nWith \\(N=6\\), and only \\(a_0\\) and \\(a_3\\) being non-zero:\n\\[\nx[n] = a_0 e^{j 0 (2\\pi/6) n} + a_3 e^{j 3 (2\\pi/6) n}\n\\]\nSubstituting the values for \\(a_0\\) and \\(a_3\\):\n\\[\nx[n] = (1/3) + (1/6) e^{j \\pi n} = (1/3) + (1/6)(-1)^{n} \\quad \\text{(3.116)}\n\\]\nThis sequence \\(x[n]\\) is sketched in Figure 3.20.\n\n\n\n\nThis slide connects the concept of minimum power to Parseval’s relation. Since each non-zero coefficient contributes positively to the total power, minimizing power means setting all unconstrained coefficients to zero. The final step is to synthesize the signal from these few non-zero coefficients. This example shows a practical application of DTFS properties in signal design or reconstruction."
  },
  {
    "objectID": "ss_37.html#example-3.14-interactive-plot-of-xn",
    "href": "ss_37.html#example-3.14-interactive-plot-of-xn",
    "title": "Signals and Systems",
    "section": "Example 3.14: Interactive Plot of \\(x[n]\\)",
    "text": "Example 3.14: Interactive Plot of \\(x[n]\\)\nLet’s visualize the sequence \\(x[n]\\) that we derived from the minimum power criterion.\n\n```{ojs}\n// Reuse plot_discrete_signal function, if available, or redefine\nawait require.alias({\n  \"plotly.js\": \"https://cdn.plot.ly/plotly-2.32.0.min.js\"\n}).resolve(\"plotly.js\");\n\nif (typeof plot_discrete_signal === 'undefined') {\n  function plot_discrete_signal(data, title, y_label) {\n    return Plotly.newPlot(\n      html`&lt;div style=\"width:100%;height:300px;\"&gt;&lt;/div&gt;`,\n      [{\n        x: data.n,\n        y: data.values,\n        mode: 'markers',\n        marker: { size: 8 },\n        type: 'scatter'\n      }],\n      {\n        title: title,\n        xaxis: { title: 'n' },\n        yaxis: { title: y_label },\n        margin: { t: 40, b: 40, l: 40, r: 40 }\n      }\n    );\n  }\n}\n```\n\n\n\n\n\n\n\nOJS Syntax Error (line 410, column 1)Unexpected token\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Plot the derived x[n]\nplot_discrete_signal(x_n_derived_data, 'Derived Sequence x[n] (Period N=6)', 'Amplitude');\n\n\n\n\n\n\n\nThis interactive plot provides a visual confirmation of the derived signal \\(x[n]\\). Students can see the alternating nature due to the \\((-1)^n\\) term and the DC offset. It reinforces the idea that even with minimal information, Fourier series properties allow us to uniquely determine and visualize the signal."
  },
  {
    "objectID": "ss_37.html#example-3.15-periodic-convolution-property",
    "href": "ss_37.html#example-3.15-periodic-convolution-property",
    "title": "Signals and Systems",
    "section": "Example 3.15: Periodic Convolution Property",
    "text": "Example 3.15: Periodic Convolution Property\nProblem: A signal \\(w[n]\\) is periodic with fundamental period \\(N=7\\). Its Fourier series coefficients are given by:\n\\[\nc_{k}=\\frac{\\sin ^{2}(3 \\pi k / 7)}{7 \\sin ^{2}(\\pi k / 7)} \\quad \\text{(3.117)}\n\\]\nDetermine and sketch the sequence \\(w[n]\\).\nStrategy: Recognize the form of \\(c_k\\) in terms of known Fourier coefficients and then apply the periodic convolution property. We observe that \\(c_k = 7 d_k^2\\), where \\(d_k\\) are the Fourier series coefficients of a square wave \\(x[n]\\) from Example 3.12. Specifically, \\(d_k\\) corresponds to a periodic square wave \\(x[n]\\) of period \\(N=7\\) that is \\(1\\) for \\(n \\in \\{-1, 0, 1\\}\\) (modulo 7) and \\(0\\) otherwise.\nFrom the periodic convolution property (Table 3.2): If \\(x[n] \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} d_k\\), then \\(\\sum_{r=\\langle N\\rangle} x[r] y[n-r] \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} N d_k b_k\\). Here, we have \\(N d_k d_k\\), which means \\(w[n]\\) is the periodic convolution of \\(x[n]\\) with itself:\n\\[\nw[n]=\\sum_{r=\\langle 7\\rangle} x[r] x[n-r] \\quad \\text{(3.118)}\n\\]\nWe need to compute this convolution for one period, e.g., for \\(n \\in \\{0, 1, ..., 6\\}\\).\n\nThis example is a more advanced application of the properties. The key insight is recognizing that \\(c_k\\) is proportional to the square of another Fourier series coefficient (\\(d_k\\)), which immediately points to the periodic convolution property. Identifying the underlying signal \\(x[n]\\) from its Fourier series form is crucial here."
  },
  {
    "objectID": "ss_37.html#example-3.15-calculating-and-plotting-wn",
    "href": "ss_37.html#example-3.15-calculating-and-plotting-wn",
    "title": "Signals and Systems",
    "section": "Example 3.15: Calculating and Plotting \\(w[n]\\)",
    "text": "Example 3.15: Calculating and Plotting \\(w[n]\\)\nLet’s compute \\(w[n]\\) by performing the periodic convolution \\(\\sum_{r=\\langle 7\\rangle} x[r] x[n-r]\\). The sequence \\(x[n]\\) (over one period \\(n=0, \\ldots, 6\\)) is defined as \\(x[n]=1\\) for \\(n \\in \\{0, \\pm 1\\}\\) (modulo 7). This translates to \\(x[0]=1, x[1]=1, x[6]=1\\), and \\(0\\) for \\(n \\in \\{2, 3, 4, 5\\}\\).\nCalculations for \\(w[n]\\) (one period): - \\(w[0] = x[0]x[0] + x[1]x[6] + x[6]x[1] = 1 \\cdot 1 + 1 \\cdot 1 + 1 \\cdot 1 = 3\\). - \\(w[1] = x[0]x[1] + x[1]x[0] + x[2]x[6] + x[6]x[2] = 1 \\cdot 1 + 1 \\cdot 1 + 0 \\cdot 1 + 1 \\cdot 0 = 2\\). - \\(w[2] = x[0]x[2] + x[1]x[1] + x[2]x[0] + x[3]x[6] + x[6]x[3] = 1 \\cdot 0 + 1 \\cdot 1 + 0 \\cdot 1 + 0 \\cdot 1 + 1 \\cdot 0 = 1\\). - \\(w[3] = x[0]x[3] + x[1]x[2] + x[2]x[1] + x[3]x[0] = 1 \\cdot 0 + 1 \\cdot 0 + 0 \\cdot 1 + 0 \\cdot 1 = 0\\). Due to symmetry and periodicity, \\(w[4]=w[3]=0\\), \\(w[5]=w[2]=1\\), \\(w[6]=w[1]=2\\).\nSo, the sequence \\(w[n]\\) for \\(n \\in \\{0, \\ldots, 6\\}\\) is \\(\\{3, 2, 1, 0, 0, 1, 2\\}\\). This is a periodic triangular-like pulse.\n\n```{ojs}\n// Reuse plot_discrete_signal function\nawait require.alias({\n  \"plotly.js\": \"https://cdn.plot.ly/plotly-2.32.0.min.js\"\n}).resolve(\"plotly.js\");\n\nif (typeof plot_discrete_signal === 'undefined') {\n  function plot_discrete_signal(data, title, y_label) {\n    return Plotly.newPlot(\n      html`&lt;div style=\"width:100%;height:300px;\"&gt;&lt;/div&gt;`,\n      [{\n        x: data.n,\n        y: data.values,\n        mode: 'markers',\n        marker: { size: 8 },\n        type: 'scatter'\n      }],\n      {\n        title: title,\n        xaxis: { title: 'n' },\n        yaxis: { title: y_label },\n        margin: { t: 40, b: 40, l: 40, r: 40 }\n      }\n    );\n  }\n}\n```\n\n\n\n\n\n\n\nOJS Syntax Error (line 513, column 1)Unexpected token\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Plot the derived w[n]\nplot_discrete_signal(w_n_data, 'Sequence w[n] (Result of Periodic Convolution)', 'Amplitude');\n\n\n\n\n\n\n\nThis slide provides the explicit calculation of \\(w[n]\\) for one period, detailing how the periodic convolution is performed. The interactive plot then visualizes the resulting triangular pulse, which is a common shape when convolving two rectangular-like pulses. This dynamic visualization helps solidify the understanding of periodic convolution."
  },
  {
    "objectID": "ss_37.html#conclusion",
    "href": "ss_37.html#conclusion",
    "title": "Signals and Systems",
    "section": "Conclusion",
    "text": "Conclusion\nWe’ve explored several key properties of the Discrete-Time Fourier Series:\n\nLinearity: Simplifies Fourier analysis by allowing signal decomposition and superposition.\nMultiplication: Connects time-domain multiplication to periodic convolution in the frequency domain.\nFirst Difference: Provides a discrete-time analogy to differentiation, useful for certain signal structures.\nParseval’s Relation: A fundamental principle ensuring the conservation of average power between time and frequency domains.\n\nThese properties are fundamental tools for analyzing and understanding discrete-time signals and systems in ECE. They enable us to predict system behavior, simplify calculations, and gain deeper conceptual insights into signal characteristics.\n\nTo conclude, reiterate the importance of these properties as foundational tools. Encourage students to practice applying these properties in various problem-solving scenarios, as they are essential for more advanced topics in Signals and Systems, such as the Discrete-Time Fourier Transform and Z-Transform. Reviewing the examples and understanding the underlying principles will greatly aid their comprehension."
  },
  {
    "objectID": "ss_37.html#section-3.7",
    "href": "ss_37.html#section-3.7",
    "title": "Signals and Systems",
    "section": "Section 3.7",
    "text": "Section 3.7\n\nToday, we delve into the properties of the Discrete-Time Fourier Series, or DTFS. Understanding these properties is crucial for analyzing and manipulating discrete-time signals efficiently. Many of these properties will seem familiar, as they have strong parallels with the Continuous-Time Fourier Series properties we’ve already covered. However, we’ll also highlight some key differences that are unique to the discrete-time domain. These properties not only offer conceptual insights but also simplify the computation of Fourier series coefficients for complex signals."
  },
  {
    "objectID": "ss_37.html#overview-of-dtfs-properties",
    "href": "ss_37.html#overview-of-dtfs-properties",
    "title": "Signals and Systems",
    "section": "Overview of DTFS Properties",
    "text": "Overview of DTFS Properties\nDTFS properties share strong similarities with CTFS properties.\nThey are essential tools for signal analysis and manipulation.\n\n\n\n\n\n\nNote\n\n\nShorthand Notation:\nWe use the notation \\(x[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} a_k\\) to indicate that \\(x[n]\\) is a periodic signal with period \\(N\\) and \\(a_k\\) are its Fourier series coefficients.\n\n\n\n\nThe table on the next slide summarizes the most important properties. It’s important to remember this shorthand notation, as it’s commonly used in textbooks and research to express the Fourier series relationship."
  },
  {
    "objectID": "ss_37.html#table-3.2-properties-of-discrete-time-fourier-series",
    "href": "ss_37.html#table-3.2-properties-of-discrete-time-fourier-series",
    "title": "Signals and Systems",
    "section": "Table 3.2: Properties of Discrete-Time Fourier Series",
    "text": "Table 3.2: Properties of Discrete-Time Fourier Series\n\n\n\n\n\n\n\n\nProperty\nPeriodic Signal\nFourier Series Coefficients\n\n\n\n\nPeriodicity\n\\(x[n]\\) periodic with period \\(N\\)\n\\(a_k\\) periodic with period \\(N\\)\n\n\nLinearity\n\\(A x[n]+B y[n]\\)\n\\(A a_{k}+B b_{k}\\)\n\n\nTime Shifting\n\\(x\\left[n-n_{0}\\right]\\)\n\\(a_{k} e^{-j k(2 \\pi / N) n_{0}}\\)\n\n\nFrequency Shifting\n\\(e^{j M(2 \\pi / N) n} x[n]\\)\n\\(a_{k-M}\\)\n\n\nConjugation\n\\(x^{*}[n]\\)\n\\(a_{-k}^{*}\\)\n\n\nTime Reversal\n\\(x[-n]\\)\n\\(a_{-k}\\)\n\n\nPeriodic Convolution\n\\(\\sum_{r=\\langle N\\rangle} x[r] y[n-r]\\)\n\\(N a_{k} b_{k}\\)\n\n\nMultiplication\n\\(x[n] y[n]\\)\n\\(\\sum_{l=\\langle N\\rangle} a_{l} b_{k-l}\\)\n\n\nFirst Difference\n\\(x[n]-x[n-1]\\)\n\\(\\left(1-e^{-j k(2 \\pi / N)}\\right) a_{k}\\)\n\n\nRunning Sum\n\\(\\sum_{m=-\\infty}^{n} x[m]\\) (\\(a_0=0\\) for periodicity)\n\\(\\frac{1}{\\left(1-e^{-j k(2 \\pi / N)}\\right)} a_{k}\\) (for \\(k \\neq 0, \\pm N, \\ldots\\))\n\n\nConjugate Symmetry (Real \\(x[n]\\))\n\\(x[n]\\) real\n\\(a_{k}=a_{-k}^{*}\\), \\(|a_k|=|a_{-k}|\\), \\(\\angle a_k = -\\angle a_{-k}\\)\n\n\nReal & Even Signals\n\\(x[n]\\) real and even\n\\(a_k\\) real and even\n\n\nReal & Odd Signals\n\\(x[n]\\) real and odd\n\\(a_k\\) purely imaginary and odd\n\n\n\n\nThis table summarizes the key properties. I’ve slightly reordered some for logical flow, but the content is the same as in the textbook. We’ll discuss some of the most important properties in more detail, especially those with distinct discrete-time characteristics, and walk through examples."
  },
  {
    "objectID": "ss_37.html#time-shifting-property",
    "href": "ss_37.html#time-shifting-property",
    "title": "Signals and Systems",
    "section": "Time Shifting Property",
    "text": "Time Shifting Property\nIf \\(x[n] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} a_k\\), then \\(x[n-n_0] \\stackrel{\\mathcal{FS}}{\\longleftrightarrow} a_k e^{-j k(2\\pi/N)n_0}\\).\nA time shift in the signal domain corresponds to a phase shift in the frequency domain.\nLet’s visualize this with a simple square wave.\n\n\n\nviewof N_shift = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\n\nviewof P_shift = Inputs.number([1, 15], {\n  label: \"P (Pulse Width, 2N1+1):\",\n  step: 1,\n  value: 3\n})\n\nviewof n0_shift = Inputs.range([0, N_shift - 1], {\n  label: \"Shift (n0):\",\n  step: 1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObserve the top plot: as you adjust the n0 slider, the original square wave x[n] shifts to x[n-n0]. Now look at the bottom plot for the Fourier coefficients. The magnitudes of the coefficients do not change with a time shift. This makes sense, as shifting a signal doesn’t change its energy distribution across frequencies. However, the phases of the coefficients change linearly with k. This linear phase shift is directly proportional to the amount of time shift n0. This property is fundamental for understanding how delays affect the frequency content of signals."
  },
  {
    "objectID": "ss_37.html#parsevals-relation-for-dt-periodic-signals",
    "href": "ss_37.html#parsevals-relation-for-dt-periodic-signals",
    "title": "Signals and Systems",
    "section": "Parseval’s Relation for DT Periodic Signals",
    "text": "Parseval’s Relation for DT Periodic Signals\n\\[ \\frac{1}{N} \\sum_{n=\\langle N\\rangle}|x[n]|^{2}=\\sum_{k=\\langle N\\rangle}\\left|a_{k}\\right|^{2} \\]\nThis relation states that the average power in one period of \\(x[n]\\) (LHS) equals the sum of the average powers in all its harmonic components (RHS).\n\n\n\n\n\n\nTip\n\n\nThis is a powerful conservation-of-energy principle, linking the time-domain energy (or power) of a signal to its frequency-domain representation. It applies to both CT and DT signals, with appropriate changes in summation/integration and scaling factors.\n\n\n\nLet’s verify Parseval’s relation for a discrete-time square wave.\n\n\n\nviewof N_parseval = Inputs.number([1, 20], {\n  label: \"N (Period):\",\n  step: 1,\n  value: 10\n})\n\nviewof P_parseval = Inputs.number([1, 15], {\n  label: \"P (Pulse Width, 2N1+1):\",\n  step: 1,\n  value: 3\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe output clearly shows that the calculated LHS and RHS are equal, verifying Parseval’s relation for this discrete-time square wave. This confirms that the total average power of the signal is conserved whether you measure it in the time domain or sum the powers of its frequency components. This is a fundamental concept in signal processing for power analysis."
  },
  {
    "objectID": "ss_37.html#example-3.13-linearity",
    "href": "ss_37.html#example-3.13-linearity",
    "title": "Signals and Systems",
    "section": "Example 3.13: Linearity",
    "text": "Example 3.13: Linearity\nFind the Fourier series coefficients \\(a_k\\) of \\(x[n]\\) shown below.\n\\(x[n]\\) can be decomposed into \\(x_1[n]\\) (square wave) and \\(x_2[n]\\) (DC component).\n\n\n\n\n\n\nTip\n\n\nStrategy:\n\nDecompose \\(x[n]\\) into simpler components whose coefficients are known or easy to find.\nUse the linearity property to sum the coefficients.\n\n\n\n\n\n\n\n\n\ngraph TD\n    A[\"x[n]\"] --&gt; B{Linearity Property}\n    B --&gt; C[\"x1[n]\"]\n    B --&gt; D[\"x2[n]\"]\n    C --&gt; E[\"b_k\"]\n    D --&gt; F[\"c_k (DC component)\"]\n    E & F --&gt; G[\"a_k = b_k + c_k\"]\n\n\n\n\n\n\n\nThis example demonstrates the power of the linearity property. Instead of directly calculating the Fourier series for the complex signal \\(x[n]\\), we can break it down into two simpler signals: a standard square wave \\(x_1[n]\\) and a DC offset \\(x_2[n]\\). We already know how to find the coefficients for these simpler signals from previous examples or basic definitions. Then, we just add their coefficients to get the coefficients for \\(x[n]\\)."
  },
  {
    "objectID": "ss_37.html#example-3.13-visualizing-components-and-coefficients",
    "href": "ss_37.html#example-3.13-visualizing-components-and-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.13: Visualizing Components and Coefficients",
    "text": "Example 3.13: Visualizing Components and Coefficients\n\\(x[n]\\) with \\(N=5\\). \\(x_1[n]\\) is a square wave with \\(N_1=1\\), and \\(x_2[n]\\) is a DC component.\n\n\n\n\n\n\n\n\n\n\nThe top plot shows the original signal \\(x[n]\\) (orange), its square wave component \\(x_1[n]\\) (blue), and its DC component \\(x_2[n]\\) (green). You can clearly see how \\(x[n]\\) is the sum of \\(x_1[n]\\) and \\(x_2[n]\\). The bottom plot shows the magnitudes of their respective Fourier coefficients. Notice how \\(|a_k|\\) (orange) is the sum of \\(|b_k|\\) (blue) and \\(|c_k|\\) (green) for each \\(k\\). Specifically, for \\(k=0\\), \\(a_0 = b_0 + c_0 = 3/5 + 1 = 8/5\\). For other \\(k\\), \\(c_k=0\\), so \\(a_k = b_k\\). This visual confirms the linearity property in action."
  },
  {
    "objectID": "ss_37.html#example-3.14-minimum-power-signal-reconstruction",
    "href": "ss_37.html#example-3.14-minimum-power-signal-reconstruction",
    "title": "Signals and Systems",
    "section": "Example 3.14: Minimum Power & Signal Reconstruction",
    "text": "Example 3.14: Minimum Power & Signal Reconstruction\nProblem: Determine \\(x[n]\\) given:\n\n\\(x[n]\\) is periodic with \\(N=6\\).\n\\(\\sum_{n=0}^{5} x[n]=2\\).\n\\(\\sum_{n=2}^{7}(-1)^{n} x[n]=1\\).\n\\(x[n]\\) has the minimum power per period among signals satisfying 1-3.\n\nSolution Steps:\n\nFrom Fact 2: \\(a_0 = \\frac{1}{N} \\sum x[n] = \\frac{1}{6}(2) = \\frac{1}{3}\\).\nFrom Fact 3: \\((-1)^n = e^{-j\\pi n} = e^{-j(2\\pi/6)3n}\\), so this term corresponds to \\(k=3\\). Thus, \\(a_3 = \\frac{1}{N} \\sum (-1)^n x[n] = \\frac{1}{6}(1) = \\frac{1}{6}\\).\nFrom Fact 4 (Minimum Power): Parseval’s relation states \\(P = \\sum_{k=\\langle N\\rangle} |a_k|^2\\). To minimize power, all other coefficients (\\(a_1, a_2, a_4, a_5\\)) must be zero.\n\nTherefore, \\(x[n]\\) only has \\(a_0\\) and \\(a_3\\) as non-zero coefficients.\n\\(x[n] = a_0 e^{j0(2\\pi/6)n} + a_3 e^{j3(2\\pi/6)n} = a_0 + a_3 e^{j\\pi n} = \\frac{1}{3} + \\frac{1}{6}(-1)^n\\).\n\nThis example is a classic problem that ties together several properties. We use the definition of the Fourier series coefficients to extract \\(a_0\\) and \\(a_3\\) from the given summations. Then, the critical insight comes from Parseval’s relation: to minimize the total average power, any coefficient not explicitly determined must be zero. This allows us to uniquely determine the signal \\(x[n]\\) from partial information about its spectrum. Let’s visualize this reconstructed signal."
  },
  {
    "objectID": "ss_37.html#example-3.14-visualizing-reconstructed-xn",
    "href": "ss_37.html#example-3.14-visualizing-reconstructed-xn",
    "title": "Signals and Systems",
    "section": "Example 3.14: Visualizing Reconstructed \\(x[n]\\)",
    "text": "Example 3.14: Visualizing Reconstructed \\(x[n]\\)\nThe reconstructed signal: \\(x[n] = \\frac{1}{3} + \\frac{1}{6}(-1)^n\\).\n\n\n\n\n\n\n\nHere’s the signal \\(x[n]\\) that satisfies all the given conditions. It’s a simple, alternating sequence, which makes sense given that only the DC component (\\(a_0\\)) and the highest frequency component (\\(a_3\\) for \\(N=6\\)) were non-zero. This demonstrates how spectral information, combined with power minimization, can uniquely define a signal."
  },
  {
    "objectID": "ss_37.html#example-3.15-periodic-convolution",
    "href": "ss_37.html#example-3.15-periodic-convolution",
    "title": "Signals and Systems",
    "section": "Example 3.15: Periodic Convolution",
    "text": "Example 3.15: Periodic Convolution\nProblem: Determine and sketch \\(w[n]\\) given its Fourier series coefficients \\(c_k\\). \\(w[n]\\) is periodic with \\(N=7\\), and \\(c_k = \\frac{\\sin^2(3\\pi k/7)}{7\\sin^2(\\pi k/7)}\\).\nStrategy:\n\nRecognize \\(c_k\\) as a product of known coefficient forms.\nUse the periodic convolution property to find \\(w[n]\\).\n\nWe observe \\(c_k = 7 d_k^2\\), where \\(d_k\\) are the coefficients of a square wave \\(x[n]\\) with \\(N=7\\) and \\(N_1=1\\) (pulse width \\(P=3\\)).\nSince \\(c_k = 7 d_k d_k\\), by the periodic convolution property (\\(N a_k b_k \\longleftrightarrow \\sum x[r]y[n-r]\\)), we have:\n\\[ w[n] = \\sum_{r=\\langle 7\\rangle} x[r] x[n-r] \\]\nThis means \\(w[n]\\) is the periodic convolution of the square wave \\(x[n]\\) with itself.\n\nThis example takes a different approach: starting from the Fourier coefficients and working back to the time-domain signal. The key is recognizing the structure of \\(c_k\\). It looks like the square of the coefficients of a standard discrete-time square wave. This immediately points us to the periodic convolution property. So, \\(w[n]\\) is the periodic convolution of a square wave with itself. This is a powerful technique for finding signals whose spectra are products of known spectra. Next, we’ll visualize the square wave and its self-convolution."
  },
  {
    "objectID": "ss_37.html#example-3.15-visualizing-periodic-convolution",
    "href": "ss_37.html#example-3.15-visualizing-periodic-convolution",
    "title": "Signals and Systems",
    "section": "Example 3.15: Visualizing Periodic Convolution",
    "text": "Example 3.15: Visualizing Periodic Convolution\n\\(x[n]\\) is a square wave with \\(N=7\\) and \\(P=3\\) (\\(N_1=1\\)). \\(w[n]\\) is its periodic convolution with itself: \\(w[n] = (x * x)[n]\\).\n\n\n\n\n\n\n\nThe top plot shows the original square wave \\(x[n]\\) with \\(N=7\\) and a pulse width of 3. The bottom plot shows the result of its periodic convolution with itself, \\(w[n]\\). Notice how the convolution operation “smoothes” the signal, creating a triangular shape (a discrete-time triangle wave). This is a common result when convolving a pulse with itself, and seeing it derived through the frequency domain (by squaring the coefficients) is a powerful illustration of the convolution property."
  },
  {
    "objectID": "ss_37.html#summary-of-dtfs-properties",
    "href": "ss_37.html#summary-of-dtfs-properties",
    "title": "Signals and Systems",
    "section": "Summary of DTFS Properties",
    "text": "Summary of DTFS Properties\n\nPeriodicity: Both \\(x[n]\\) and \\(a_k\\) are periodic with period \\(N\\).\nLinearity: \\(A x[n]+B y[n] \\longleftrightarrow A a_{k}+B b_{k}\\).\nTime Shift: \\(x[n-n_0] \\longleftrightarrow a_k e^{-j k(2\\pi/N)n_0}\\) (phase shift).\nMultiplication: \\(x[n] y[n] \\longleftrightarrow \\sum_{l=\\langle N\\rangle} a_l b_{k-l}\\) (periodic convolution of coefficients).\nPeriodic Convolution: \\(\\sum_{r=\\langle N\\rangle} x[r] y[n-r] \\longleftrightarrow N a_k b_k\\) (product of coefficients).\nFirst Difference: \\(x[n]-x[n-1] \\longleftrightarrow (1-e^{-j k(2\\pi/N)}) a_k\\).\nParseval’s Relation: Average power is conserved across domains. \\[ \\frac{1}{N} \\sum_{n=\\langle N\\rangle}|x[n]|^{2}=\\sum_{k=\\langle N\\rangle}\\left|a_{k}\\right|^{2} \\]\n\n\n\n\n\n\n\nCaution\n\n\nAlways remember the periodic nature of DTFS coefficients and the finite summation in periodic convolution, as these are key distinctions from CTFS.\n\n\n\n\nIn summary, the properties of the Discrete-Time Fourier Series provide a powerful toolbox for signal analysis. They allow us to understand how operations in the time domain affect the frequency domain, and vice-versa. The finite nature of the series and the periodicity of its coefficients are central to all these properties. Mastering these properties will be essential as we move on to more complex signal processing concepts. Thank you."
  },
  {
    "objectID": "ss_35.html#introduction-to-fourier-series-properties",
    "href": "ss_35.html#introduction-to-fourier-series-properties",
    "title": "Signals and Systems",
    "section": "Introduction to Fourier Series Properties",
    "text": "Introduction to Fourier Series Properties\nFourier series representations possess important properties useful for conceptual insights and simplifying calculations.\nThese properties help us understand how operations on a signal in the time domain affect its Fourier series coefficients.\n\nToday, we’ll dive into the fundamental properties of Continuous-Time Fourier Series. Understanding these properties is crucial because they not only provide deeper insights into signal behavior but also offer powerful shortcuts for analyzing complex signals, often avoiding direct, tedious calculations."
  },
  {
    "objectID": "ss_35.html#shorthand-notation-for-fourier-series",
    "href": "ss_35.html#shorthand-notation-for-fourier-series",
    "title": "Signals and Systems",
    "section": "Shorthand Notation for Fourier Series",
    "text": "Shorthand Notation for Fourier Series\nTo simplify discussion, we use a shorthand notation.\nIf \\(x(t)\\) is a periodic signal with period \\(T\\) and fundamental frequency \\(\\omega_0 = 2\\pi/T\\), and its Fourier series coefficients are \\(a_k\\), we write:\n\\[\nx(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{k}\n\\]\n\nThis notation, \\(x(t)\\) double-arrow FS \\(a_k\\), simply means that \\(a_k\\) are the complex Fourier series coefficients corresponding to the periodic signal \\(x(t)\\). It’s a convenient way to express the Fourier series pair without writing out the full synthesis or analysis equations every time."
  },
  {
    "objectID": "ss_35.html#linearity",
    "href": "ss_35.html#linearity",
    "title": "Signals and Systems",
    "section": "Linearity",
    "text": "Linearity\nIf \\(x(t)\\) and \\(y(t)\\) are periodic with period \\(T\\), with coefficients \\(a_k\\) and \\(b_k\\) respectively:\n\\[\n\\begin{aligned}\n& x(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{k}, \\\\\n& y(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} b_{k} .\n\\end{aligned}\n\\]\nThen, a linear combination of these signals, \\(z(t) = A x(t) + B y(t)\\), will have Fourier series coefficients \\(c_k\\):\n\\[\nz(t)=A x(t)+B y(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} c_{k}=A a_{k}+B b_{k}\n\\]\n\nLinearity is one of the most fundamental properties. It tells us that if we combine signals in a linear way, their Fourier coefficients combine in the exact same linear way. This is incredibly useful because it allows us to break down complex signals into simpler components, analyze each component separately, and then combine the results. The proof follows directly from the definition of the Fourier series analysis equation."
  },
  {
    "objectID": "ss_35.html#linearity-interactive-demonstration",
    "href": "ss_35.html#linearity-interactive-demonstration",
    "title": "Signals and Systems",
    "section": "Linearity: Interactive Demonstration",
    "text": "Linearity: Interactive Demonstration\nLet’s see linearity in action with two simple periodic signals.\n\n\n\n\n\n\n\nIn this Python example, we simulate the Fourier coefficients for two simple signals, a sine wave and a cosine wave. We then apply arbitrary scaling factors, A and B, to combine these signals. The output clearly shows that the coefficients of the combined signal are simply the scaled sum of the individual coefficients, confirming the linearity property. While this uses hypothetical coefficients for simplicity, it captures the essence."
  },
  {
    "objectID": "ss_35.html#time-shifting",
    "href": "ss_35.html#time-shifting",
    "title": "Signals and Systems",
    "section": "Time Shifting",
    "text": "Time Shifting\nWhen a periodic signal \\(x(t)\\) is shifted in time by \\(t_0\\) to become \\(y(t) = x(t-t_0)\\), its period \\(T\\) remains unchanged.\nThe new Fourier series coefficients \\(b_k\\) are related to the original coefficients \\(a_k\\) by:\n\\[\nx\\left(t-t_{0}\\right) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} e^{-j k \\omega_{0} t_{0}} a_{k}=e^{-j k(2 \\pi / T) t_{0}} a_{k}\n\\]\n\n\n\n\n\n\nTip\n\n\nKey Insight: Time shifting a signal only changes the phase of its Fourier coefficients, not their magnitudes.\n\n\n\n\nTime shifting is a very intuitive operation. If you take a periodic signal and just slide it along the time axis, its fundamental frequency and the ‘strength’ of its harmonics don’t change. What does change is the starting phase of each harmonic component. The exponential term, \\(e^{-j k \\omega_{0} t_{0}}\\), represents this phase shift, which is linear with the harmonic index \\(k\\). This property is crucial for understanding delays and propagation effects in systems."
  },
  {
    "objectID": "ss_35.html#time-shifting-interactive-visualization",
    "href": "ss_35.html#time-shifting-interactive-visualization",
    "title": "Signals and Systems",
    "section": "Time Shifting: Interactive Visualization",
    "text": "Time Shifting: Interactive Visualization\nObserve a square wave and its time-shifted version. Notice how the magnitude of coefficients remains the same, but the phase changes.\n\nviewof t0_slider = Inputs.range([-2, 2], {\n  label: \"Shift Amount (t0)\",\n  step: 0.1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot demonstrates the time-shifting property. The top panel shows the original square wave and its shifted version. As you adjust the Shift Amount (t0) slider, you’ll see the red dashed line (the shifted signal) move. Crucially, look at the middle panel: the magnitudes of the Fourier coefficients for both signals are identical. However, in the bottom panel, the phases of the shifted signal’s coefficients exhibit a linear change with respect to the harmonic index \\(k\\), which is exactly what the formula \\(e^{-j k \\omega_{0} t_{0}}\\) predicts."
  },
  {
    "objectID": "ss_35.html#time-reversal",
    "href": "ss_35.html#time-reversal",
    "title": "Signals and Systems",
    "section": "Time Reversal",
    "text": "Time Reversal\nWhen a periodic signal \\(x(t)\\) undergoes time reversal to become \\(y(t) = x(-t)\\), its period \\(T\\) remains unchanged.\nThe new Fourier series coefficients \\(b_k\\) are related to the original coefficients \\(a_k\\) by:\n\\[\nx(-t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{-k}\n\\]\n\n\n\n\n\n\nNote\n\n\nSymmetry Implication:\nIf \\(x(t)\\) is even (\\(x(-t) = x(t)\\)), then \\(a_k = a_{-k}\\).\nIf \\(x(t)\\) is odd (\\(x(-t) = -x(t)\\)), then \\(a_k = -a_{-k}\\).\n\n\n\n\nTime reversal flips the signal about the vertical axis at \\(t=0\\). The property states that the Fourier coefficients are also ‘flipped’ in their index. So the \\(k\\)-th coefficient of \\(x(-t)\\) is the negative \\(k\\)-th coefficient of \\(x(t)\\). This has direct implications for symmetric signals. For an even signal, the coefficients are also even; for an odd signal, the coefficients are odd. This can save a lot of calculation if you recognize the symmetry."
  },
  {
    "objectID": "ss_35.html#time-reversal-interactive-visualization",
    "href": "ss_35.html#time-reversal-interactive-visualization",
    "title": "Signals and Systems",
    "section": "Time Reversal: Interactive Visualization",
    "text": "Time Reversal: Interactive Visualization\nObserve an asymmetric periodic signal and its time-reversed version.\n\n\n\n\n\n\n\nHere, we visualize time reversal using a sawtooth wave, which is an asymmetric signal. The top plot shows the original signal and its flipped version. In the coefficient plots, you’ll notice that the magnitudes are symmetric (\\(|a_k| = |a_{-k}|\\)), but the phases are anti-symmetric (\\(\\angle a_k = -\\angle a_{-k}\\)), reflecting the \\(a_{-k}\\) relationship. This clearly illustrates that reversing a signal in time corresponds to ‘reversing’ the indices of its Fourier coefficients."
  },
  {
    "objectID": "ss_35.html#time-scaling",
    "href": "ss_35.html#time-scaling",
    "title": "Signals and Systems",
    "section": "Time Scaling",
    "text": "Time Scaling\nIf \\(x(t)\\) is periodic with period \\(T\\) and fundamental frequency \\(\\omega_0\\), then \\(x(\\alpha t)\\) (for \\(\\alpha &gt; 0\\)) is periodic with period \\(T/\\alpha\\) and fundamental frequency \\(\\alpha \\omega_0\\).\nThe Fourier coefficients for \\(x(\\alpha t)\\) are the same as for \\(x(t)\\), i.e., \\(a_k\\).\n\\[\nx(\\alpha t)=\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k\\left(\\alpha \\omega_{0}\\right) t}\n\\]\n\n\n\n\n\n\nCaution\n\n\nImportant: While the coefficients \\(a_k\\) remain the same, the series representation changes because the fundamental frequency is now \\(\\alpha \\omega_0\\).\n\n\n\n\nTime scaling stretches or compresses the signal along the time axis. If you compress it (alpha &gt; 1), it speeds up, and its period shortens. If you stretch it (alpha &lt; 1), it slows down, and its period lengthens. The key here is that the weights or amplitudes of the harmonic components (the \\(a_k\\)’s) don’t change. What changes is the frequency at which each harmonic occurs, effectively scaling the fundamental frequency by \\(\\alpha\\)."
  },
  {
    "objectID": "ss_35.html#time-scaling-interactive-visualization",
    "href": "ss_35.html#time-scaling-interactive-visualization",
    "title": "Signals and Systems",
    "section": "Time Scaling: Interactive Visualization",
    "text": "Time Scaling: Interactive Visualization\nObserve how scaling affects the signal’s period and fundamental frequency, while the coefficients themselves remain invariant.\n\nviewof alpha_slider = Inputs.range([0.5, 2], {\n  label: \"Scaling Factor (α)\",\n  step: 0.1,\n  value: 1\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot helps illustrate the effect of time scaling. As you adjust the Scaling Factor (α), you’ll see the dashed red line (the scaled signal) either compress or expand. Notice that the period of the scaled signal changes to \\(T/\\alpha\\). However, if you look at the bottom panel, the Fourier coefficients a_k themselves (their magnitudes) remain exactly the same. What changes is the mapping of these coefficients to the actual frequencies in the synthesis equation, as the fundamental frequency becomes \\(\\alpha \\omega_0\\)."
  },
  {
    "objectID": "ss_35.html#multiplication",
    "href": "ss_35.html#multiplication",
    "title": "Signals and Systems",
    "section": "Multiplication",
    "text": "Multiplication\nIf \\(x(t)\\) and \\(y(t)\\) are periodic with period \\(T\\), with coefficients \\(a_k\\) and \\(b_k\\) respectively:\n\\[\n\\begin{aligned}\n& x(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{k}, \\\\\n& y(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} b_{k} .\n\\end{aligned}\n\\]\nThe Fourier series coefficients \\(h_k\\) of their product \\(x(t)y(t)\\) are given by the discrete-time convolution of \\(a_k\\) and \\(b_k\\):\n\\[\nx(t) y(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} h_{k}=\\sum_{l=-\\infty}^{\\infty} a_{l} b_{k-l}\n\\]\n\nThe multiplication property is often called the convolution property in the frequency domain. Just as convolution in the time domain corresponds to multiplication in the frequency domain for Fourier transforms, here, multiplication of two periodic signals in the time domain corresponds to the convolution of their discrete Fourier series coefficients. This is a powerful concept, especially when analyzing systems where signals are modulated or mixed."
  },
  {
    "objectID": "ss_35.html#conjugation-and-conjugate-symmetry",
    "href": "ss_35.html#conjugation-and-conjugate-symmetry",
    "title": "Signals and Systems",
    "section": "Conjugation and Conjugate Symmetry",
    "text": "Conjugation and Conjugate Symmetry\nTaking the complex conjugate of a periodic signal \\(x(t)\\) has the effect of complex conjugation and time reversal on its Fourier series coefficients:\n\\[\nx^{*}(t) \\stackrel{\\mathcal{F S}}{\\longleftrightarrow} a_{-k}^{*}\n\\]\nA significant consequence for real signals (\\(x(t) = x^*(t)\\)) is conjugate symmetry:\n\\[\na_{-k}=a_{k}^{*}\n\\]\nThis implies various symmetry properties for magnitudes, phases, real, and imaginary parts of coefficients for real signals.\n\nThis property is fundamental when dealing with real-world signals, which are always real-valued. If a signal is real, its Fourier coefficients must satisfy conjugate symmetry. This means \\(a_0\\) must be real, the magnitudes \\(|a_k|\\) are even (\\(|a_k| = |a_{-k}|\\)), and the phases \\(\\angle a_k\\) are odd (\\(\\angle a_k = -\\angle a_{-k}\\)). These symmetries simplify calculations and provide a way to check for errors."
  },
  {
    "objectID": "ss_35.html#parsevals-relation-for-continuous-time-periodic-signals",
    "href": "ss_35.html#parsevals-relation-for-continuous-time-periodic-signals",
    "title": "Signals and Systems",
    "section": "Parseval’s Relation for Continuous-Time Periodic Signals",
    "text": "Parseval’s Relation for Continuous-Time Periodic Signals\nParseval’s relation states that the average power of a periodic signal in the time domain equals the sum of the average powers of its harmonic components in the frequency domain.\n\\[\n\\frac{1}{T} \\int_{T}|x(t)|^{2} d t=\\sum_{k=-\\infty}^{+\\infty}\\left|a_{k}\\right|^{2}\n\\]\nThe left side is the average power in one period of \\(x(t)\\). The term \\(|a_k|^2\\) represents the average power in the \\(k\\)-th harmonic component.\n\n\n\n\n\n\nImportant\n\n\nConservation of Energy: This relation highlights the conservation of power between the time and frequency domains.\n\n\n\n\nParseval’s relation is a cornerstone of signal analysis. It tells us that we can quantify the total energy or power in a signal by either integrating its squared magnitude over time or by summing the squared magnitudes of its Fourier coefficients. This is incredibly useful for power calculations, noise analysis, and understanding how power is distributed across different frequency components."
  },
  {
    "objectID": "ss_35.html#parsevals-relation-interactive-demonstration",
    "href": "ss_35.html#parsevals-relation-interactive-demonstration",
    "title": "Signals and Systems",
    "section": "Parseval’s Relation: Interactive Demonstration",
    "text": "Parseval’s Relation: Interactive Demonstration\nLet’s verify Parseval’s relation for a simple square wave.\n\n\n\n\n\n\n\nIn this example, we calculate the average power of a square wave in two ways. First, directly from its time-domain definition by integrating its squared magnitude over one period. Second, by summing the squared magnitudes of its Fourier series coefficients. Notice how closely these two values match, especially as we increase the number of harmonics considered. This vividly demonstrates Parseval’s relation, confirming that power is conserved across domains."
  },
  {
    "objectID": "ss_35.html#summary-of-properties",
    "href": "ss_35.html#summary-of-properties",
    "title": "Signals and Systems",
    "section": "Summary of Properties",
    "text": "Summary of Properties\nMany important properties of continuous-time Fourier series are summarized in the table below.\n\n\n\nProperty\nPeriodic Signal\nFourier Series Coeffs\n\n\n\n\nLinearity\n\\(Ax(t) + By(t)\\)\n\\(Aa_k + Bb_k\\)\n\n\nTime Shift\n\\(x(t-t_0)\\)\n\\(a_k e^{-jk\\omega_0 t_0}\\)\n\n\nFreq Shift\n\\(e^{jM\\omega_0 t}x(t)\\)\n\\(a_{k-M}\\)\n\n\nConjugation\n\\(x^*(t)\\)\n\\(a_{-k}^*\\)\n\n\nTime Reversal\n\\(x(-t)\\)\n\\(a_{-k}\\)\n\n\nTime Scaling\n\\(x(\\alpha t)\\)\n\\(a_k\\) (with new \\(\\omega_0\\))"
  },
  {
    "objectID": "ss_35.html#summary-of-properties-1",
    "href": "ss_35.html#summary-of-properties-1",
    "title": "Signals and Systems",
    "section": "Summary of Properties",
    "text": "Summary of Properties\n\n\n\nProperty\nPeriodic Signal\nFourier Series Coeffs\n\n\n\n\nPeriodic Convolution\n\\(\\int_T x(\\tau)y(t-\\tau)d\\tau\\)\n\\(T a_k b_k\\)\n\n\nMultiplication\n\\(x(t)y(t)\\)\n\\(\\sum_{l=-\\infty}^\\infty a_l b_{k-l}\\)\n\n\nDifferentiation\n\\(dx(t)/dt\\)\n\\(jk\\omega_0 a_k\\)\n\n\nIntegration\n\\(\\int x(\\tau)d\\tau\\)\n\\((1/(jk\\omega_0)) a_k\\)\n\n\nReal Signal\n\\(x(t)\\) real\n\\(a_k = a_{-k}^*\\)\n\n\nReal & Even\n\\(x(t)\\) real & even\n\\(a_k\\) real & even\n\n\nReal & Odd\n\\(x(t)\\) real & odd\n\\(a_k\\) purely imag. & odd\n\n\n\n\\[\n\\frac{1}{T} \\int_{T}|x(t)|^{2} d t=\\sum_{k=-\\infty}^{+\\infty}\\left|a_{k}\\right|^{2} \\quad \\text{(Parseval's Relation)}\n\\]\n\nThis table provides a comprehensive overview of all the key properties we’ve discussed and some additional ones. It’s an invaluable reference for any Fourier series problem. Notice how operations in one domain (time) often have a dual or inverse effect in the other domain (frequency). For instance, differentiation in time corresponds to multiplication by \\(jk\\omega_0\\) in the frequency domain. These dualities are a recurring theme in signal processing."
  },
  {
    "objectID": "ss_35.html#example-3.6-using-linearity-and-time-shifting",
    "href": "ss_35.html#example-3.6-using-linearity-and-time-shifting",
    "title": "Signals and Systems",
    "section": "Example 3.6: Using Linearity and Time Shifting",
    "text": "Example 3.6: Using Linearity and Time Shifting\nConsider the signal \\(g(t)\\) with period 4.\nWe know \\(g(t) = x(t-1) - 1/2\\), where \\(x(t)\\) is a symmetric square wave with \\(T=4, T_1=1\\).\nThe coefficients \\(a_k\\) for \\(x(t)\\) are \\(\\frac{\\sin(\\pi k/2)}{k\\pi}\\) (for \\(k \\neq 0\\)) and \\(a_0 = 1/2\\).\n\n\n\n\n\ngraph LR\n    A[\"x(t) - Square Wave T=4, T1=1\"] --&gt; B{\"Shift by 1: x(t-1)\"}\n    C[\"Constant -1/2\"] --&gt; D{Add to B}\n    B --&gt; E[\"g(t) = x(t-1) - 1/2\"]\n    D --&gt; E\n\n\n\n\n\n\n\nThis example shows how to leverage properties to find Fourier coefficients without direct integration. We’re given a signal \\(g(t)\\) that looks like a shifted and DC-offset version of a standard square wave \\(x(t)\\). The square wave \\(x(t)\\) has easily derivable coefficients. By recognizing \\(g(t)\\) as a transformation of \\(x(t)\\), we can use the linearity and time-shifting properties."
  },
  {
    "objectID": "ss_35.html#example-3.6-deriving-coefficients",
    "href": "ss_35.html#example-3.6-deriving-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.6: Deriving Coefficients",
    "text": "Example 3.6: Deriving Coefficients\n\nTime Shifting: Coefficients \\(b_k\\) for \\(x(t-1)\\) are \\(a_k e^{-j k \\omega_0 t_0}\\).\nHere, \\(\\omega_0 = 2\\pi/T = 2\\pi/4 = \\pi/2\\) and \\(t_0 = 1\\).\nSo, \\(b_k = a_k e^{-j k (\\pi/2)(1)} = a_k e^{-j k \\pi/2}\\).\nDC Offset: The term \\(-1/2\\) has coefficients \\(c_k = -1/2\\) for \\(k=0\\) and \\(0\\) for \\(k \\neq 0\\).\nLinearity: Coefficients \\(d_k\\) for \\(g(t) = x(t-1) - 1/2\\) are \\(b_k + c_k\\).\n\\[\nd_{k}=\\left\\{\\begin{array}{ll}\n\\frac{\\sin (\\pi k / 2)}{k \\pi} e^{-j k \\pi / 2}, & \\text { for } k \\neq 0 \\\\\n0, & \\text { for } k=0\n\\end{array}\\right.\n\\]\n\n\nFirst, we apply the time-shifting property. We know the coefficients of the unshifted square wave, \\(x(t)\\). Shifting it by 1 in time simply multiplies each coefficient \\(a_k\\) by a phase factor \\(e^{-j k \\pi/2}\\). Next, we consider the DC offset. A constant value in the time domain only contributes to the \\(a_0\\) coefficient in the frequency domain. Finally, we use linearity: the coefficients of the sum are the sum of the coefficients. We combine the shifted square wave’s coefficients with the DC offset’s coefficients to get the coefficients for \\(g(t)\\). Notice how the \\(a_0\\) term for \\(x(t)\\) (\\(1/2\\)) combined with the DC offset (\\(-1/2\\)) to yield \\(d_0=0\\)."
  },
  {
    "objectID": "ss_35.html#example-3.7-using-differentiation",
    "href": "ss_35.html#example-3.7-using-differentiation",
    "title": "Signals and Systems",
    "section": "Example 3.7: Using Differentiation",
    "text": "Example 3.7: Using Differentiation\nConsider the triangular wave signal \\(x(t)\\) with period \\(T=4\\).\nIts derivative, \\(dx(t)/dt\\), is the square wave \\(g(t)\\) from Example 3.6.\nIf \\(e_k\\) are the coefficients for \\(x(t)\\) and \\(d_k\\) for \\(g(t)\\), the differentiation property states:\n\\[\nd_{k}=j k \\omega_{0} e_{k}\n\\]\nSince \\(\\omega_0 = \\pi/2\\):\n\\[\nd_{k}=j k (\\pi/2) e_{k}\n\\]\n\nThis example showcases the differentiation property. We have a triangular wave, and its derivative is a square wave, which we just analyzed in Example 3.6. Instead of directly calculating the Fourier series for the triangular wave (which involves integration by parts), we can use the differentiation property. This property states that differentiating in the time domain corresponds to multiplying the Fourier coefficients by \\(j k \\omega_0\\)."
  },
  {
    "objectID": "ss_35.html#example-3.7-deriving-coefficients",
    "href": "ss_35.html#example-3.7-deriving-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.7: Deriving Coefficients",
    "text": "Example 3.7: Deriving Coefficients\nFrom \\(d_k = j k (\\pi/2) e_k\\), we can find \\(e_k\\):\n\\[\ne_{k}=\\frac{2 d_{k}}{j k \\pi}, \\quad k \\neq 0\n\\]\nSubstituting \\(d_k\\) from Example 3.6:\n\\[\ne_{k}=\\frac{2 \\sin (\\pi k / 2)}{j(k \\pi)^{2}} e^{-j k \\pi / 2}, \\quad k \\neq 0\n\\]\nFor \\(k=0\\), \\(e_0\\) is the average value of \\(x(t)\\) over one period:\n\\[\ne_{0}=\\frac{1}{T} \\int_T x(t) dt = \\frac{1}{4} \\times (\\text{Area of triangle}) = \\frac{1}{4} \\times (2) = \\frac{1}{2}\n\\]\n\nWe rearrange the differentiation formula to solve for \\(e_k\\) in terms of \\(d_k\\). We already know \\(d_k\\) from the previous example. For the DC component, \\(e_0\\), we cannot use the differentiation formula because it would involve division by zero. Instead, \\(e_0\\) is simply the average value of the signal, which we can find by calculating the area under one period of the triangular wave and dividing by the period. This demonstrates how properties can be combined with basic definitions to solve problems efficiently."
  },
  {
    "objectID": "ss_35.html#example-3.8-impulse-train-coefficients",
    "href": "ss_35.html#example-3.8-impulse-train-coefficients",
    "title": "Signals and Systems",
    "section": "Example 3.8: Impulse Train Coefficients",
    "text": "Example 3.8: Impulse Train Coefficients\nThe impulse train \\(x(t) = \\sum_{k=-\\infty}^{\\infty} \\delta(t-kT)\\) with period \\(T\\).\nThe Fourier series coefficients \\(a_k\\) are found by integrating over one period (e.g., \\([-T/2, T/2]\\)):\n\\[\na_{k}=\\frac{1}{T} \\int_{-T / 2}^{T / 2} \\delta(t) e^{-j k 2 \\pi / T} d t=\\frac{1}{T}\n\\]\nAll coefficients are equal: \\(a_k = 1/T\\).\n\n\n\n\n\ngraph LR\n    A[…] --- B{…}\n    B -- T --&gt; C{\"δ(t)\"}\n    C -- T --&gt; D{\"δ(t-T)\"}\n    D -- T --&gt; E{\"δ(t-2T)\"}\n    E -- T --&gt; B\n    style C fill:#f9f,stroke:#333,stroke-width:2px\n\n\n\n\n\n\n\nThe impulse train is a very important signal in signal processing. It consists of a series of Dirac delta functions equally spaced in time. To find its Fourier coefficients, we use the analysis equation and integrate over a single period that contains one impulse, typically at \\(t=0\\). Due to the sifting property of the delta function, the integral simply evaluates to the value of the exponential at \\(t=0\\), which is 1. Thus, all Fourier coefficients for an impulse train are constant, \\(1/T\\). This also aligns with the property that a real and even signal (like the impulse train) has real and even coefficients."
  },
  {
    "objectID": "ss_35.html#example-3.8-relating-signals-using-properties",
    "href": "ss_35.html#example-3.8-relating-signals-using-properties",
    "title": "Signals and Systems",
    "section": "Example 3.8: Relating Signals using Properties",
    "text": "Example 3.8: Relating Signals using Properties\nThe derivative of a square wave \\(g(t)\\) is \\(q(t)\\), which can be expressed as a difference of two shifted impulse trains:\n\\[\nq(t)=x\\left(t+T_{1}\\right)-x\\left(t-T_{1}\\right)\n\\]\n\nCoefficients for \\(x(t)\\) are \\(a_k = 1/T\\).\nBy time-shifting and linearity, coefficients \\(b_k\\) for \\(q(t)\\) are:\n\\(b_k = a_k e^{j k \\omega_0 T_1} - a_k e^{-j k \\omega_0 T_1}\\)\n\\(b_k = \\frac{1}{T} (e^{j k \\omega_0 T_1} - e^{-j k \\omega_0 T_1}) = \\frac{2j \\sin(k \\omega_0 T_1)}{T}\\)\n\n\n\n\n\n\ngraph TD\n    A[\"Square Wave g(t)\"]\n    B[\"Derivative d/dt\"]\n    C[\"Impulse Train x(t)\"]\n    D[\"Shifted x(t+T1)\"]\n    E[\"Shifted x(t-T1)\"]\n    F[\"q(t) = D - E\"]\n\n    A -- B --&gt; F\n    C -- Shift --&gt; D\n    C -- Shift --&gt; E\n    D -- Subtract --&gt; F\n    E -- Subtract --&gt; F\n\n\n\n\n\n\n\nThis part of the example cleverly connects several properties. We observe that the derivative of a square wave is a series of positive and negative impulses. This q(t) can be seen as the difference between two time-shifted impulse trains. We already know the coefficients for a basic impulse train. By applying the time-shifting property to get the coefficients for \\(x(t+T_1)\\) and \\(x(t-T_1)\\), and then the linearity property for their difference, we can quickly derive the Fourier coefficients \\(b_k\\) for \\(q(t)\\)."
  },
  {
    "objectID": "ss_35.html#example-3.8-connecting-back-to-square-wave",
    "href": "ss_35.html#example-3.8-connecting-back-to-square-wave",
    "title": "Signals and Systems",
    "section": "Example 3.8: Connecting Back to Square Wave",
    "text": "Example 3.8: Connecting Back to Square Wave\nSince \\(q(t)\\) is the derivative of \\(g(t)\\), we use the differentiation property:\n\\[\nb_{k}=j k \\omega_{0} c_{k}\n\\]\nWhere \\(c_k\\) are the Fourier coefficients of \\(g(t)\\).\nSolving for \\(c_k\\) (for \\(k \\neq 0\\)):\n\\[\nc_{k}=\\frac{b_{k}}{j k \\omega_{0}}=\\frac{2 j \\sin \\left(k \\omega_{0} T_{1}\\right)}{j k \\omega_{0} T}=\\frac{\\sin \\left(k \\omega_{0} T_{1}\\right)}{k \\pi}, \\quad k \\neq 0\n\\]\nFor \\(c_0\\), the average value of \\(g(t)\\) from inspection of a square wave with width \\(2T_1\\):\n\\[\nc_{0}=\\frac{2 T_{1}}{T}\n\\]\nThese are the same coefficients derived directly for a square wave!\n\nFinally, we tie it all together. Since \\(q(t)\\) is the derivative of \\(g(t)\\), we can use the differentiation property in reverse. We divide the coefficients \\(b_k\\) (which we just found for \\(q(t)\\)) by \\(jk\\omega_0\\) to get the coefficients \\(c_k\\) for \\(g(t)\\). The \\(k=0\\) term (DC component) needs to be found separately by calculating the average value of the square wave. This confirms that the Fourier coefficients obtained using these properties match those found by direct integration, demonstrating the power and consistency of these properties."
  },
  {
    "objectID": "ss_35.html#example-3.9-characterizing-a-signal",
    "href": "ss_35.html#example-3.9-characterizing-a-signal",
    "title": "Signals and Systems",
    "section": "Example 3.9: Characterizing a Signal",
    "text": "Example 3.9: Characterizing a Signal\nGiven facts about \\(x(t)\\):\n\n\\(x(t)\\) is a real signal.\n\\(x(t)\\) is periodic with \\(T=4\\), coefficients \\(a_k\\).\n\\(a_k = 0\\) for \\(|k|&gt;1\\).\nThe signal with coefficients \\(b_k = e^{-j\\pi k/2} a_{-k}\\) is odd.\n\\(\\frac{1}{4} \\int_{4}|x(t)|^{2} d t = 1/2\\).\n\nLet’s determine \\(x(t)\\) to within a sign factor.\n\nThis is a comprehensive problem that requires applying multiple properties to deduce the form of an unknown signal. We are given five distinct facts about a signal \\(x(t)\\) and its Fourier coefficients. Our goal is to use these facts to uniquely identify \\(x(t)\\) up to a sign. This is a great example of how understanding these properties allows for powerful deductive reasoning in signal analysis."
  },
  {
    "objectID": "ss_35.html#example-3.9-step-by-step-deduction",
    "href": "ss_35.html#example-3.9-step-by-step-deduction",
    "title": "Signals and Systems",
    "section": "Example 3.9: Step-by-Step Deduction",
    "text": "Example 3.9: Step-by-Step Deduction\nFact 3: \\(a_k = 0\\) for \\(|k|&gt;1\\).\n\\(\\implies x(t) = a_0 + a_1 e^{j\\pi t/2} + a_{-1} e^{-j\\pi t/2}\\) (since \\(\\omega_0 = 2\\pi/4 = \\pi/2\\)).\nFact 1: \\(x(t)\\) is real.\n\\(\\implies a_0\\) is real, and \\(a_1 = a_{-1}^*\\).\nSo, \\(x(t) = a_0 + 2\\operatorname{Re}\\{a_1 e^{j\\pi t/2}\\}\\).\nFact 4: Signal with \\(b_k = e^{-j\\pi k/2} a_{-k}\\) is odd.\n\n\\(a_{-k}\\) corresponds to \\(x(-t)\\) (Time Reversal).\n\\(e^{-j\\pi k/2}\\) corresponds to a time shift of \\(t_0=1\\) (since \\(e^{-jk\\omega_0 t_0}\\) with \\(\\omega_0=\\pi/2, t_0=1\\) gives \\(e^{-jk\\pi/2}\\)).\n\n\\(\\implies b_k\\) correspond to \\(x(-(t-1)) = x(-t+1)\\).\nSince \\(x(-t+1)\\) is odd and real (Fact 1), its Fourier coefficients \\(b_k\\) must be purely imaginary and odd. \\(\\implies b_0 = 0\\) and \\(b_{-1} = -b_1\\).\n\nWe start by using Fact 3 to limit the number of non-zero coefficients to \\(a_0, a_1, a_{-1}\\). Then, Fact 1 (x(t) is real) tells us about the symmetry of these coefficients: \\(a_0\\) is real and \\(a_1\\) is the complex conjugate of \\(a_{-1}\\). This simplifies the time-domain expression for \\(x(t)\\). Fact 4 is where it gets interesting. We recognize \\(a_{-k}\\) as the coefficients for \\(x(-t)\\) (time reversal) and the exponential term as a time shift. So, \\(b_k\\) are the coefficients for \\(x(-t+1)\\). Since this signal is explicitly stated to be odd AND we know \\(x(t)\\) is real (making \\(x(-t+1)\\) also real), its coefficients \\(b_k\\) must be purely imaginary and odd. This immediately gives us \\(b_0=0\\) and \\(b_{-1}=-b_1\\)."
  },
  {
    "objectID": "ss_35.html#example-3.9-final-steps",
    "href": "ss_35.html#example-3.9-final-steps",
    "title": "Signals and Systems",
    "section": "Example 3.9: Final Steps",
    "text": "Example 3.9: Final Steps\nFrom \\(b_0 = 0\\):\n\\(b_0 = e^{-j\\pi (0)/2} a_{-0} = a_0 = 0\\).\nFrom \\(b_{-1} = -b_1\\):\nWe also know \\(b_k = e^{-j\\pi k/2} a_{-k}\\).\nFor \\(k=1\\): \\(b_1 = e^{-j\\pi /2} a_{-1} = -j a_{-1}\\).\nSince \\(a_{-1} = a_1^*\\), we have \\(b_1 = -j a_1^*\\).\nSince \\(b_k\\) are purely imaginary, \\(b_1\\) must be purely imaginary. This is consistent with \\(-j a_1^*\\)."
  },
  {
    "objectID": "ss_35.html#example-3.9-final-steps-1",
    "href": "ss_35.html#example-3.9-final-steps-1",
    "title": "Signals and Systems",
    "section": "Example 3.9: Final Steps",
    "text": "Example 3.9: Final Steps\nFact 5: Parseval’s Relation.\nThe average power of \\(x(-t+1)\\) is also \\(1/2\\).\n\\(\\frac{1}{4} \\int_{4}|x(-t+1)|^{2} d t=1/2\\).\nUsing Parseval’s: \\(\\sum_{k=-\\infty}^\\infty |b_k|^2 = |b_{-1}|^2 + |b_0|^2 + |b_1|^2 = 1/2\\).\nSince \\(b_0=0\\) and \\(b_{-1}=-b_1\\), we have \\(2|b_1|^2 = 1/2 \\implies |b_1|^2 = 1/4 \\implies |b_1| = 1/2\\).\nSince \\(b_1\\) is purely imaginary, \\(b_1 = j/2\\) or \\(b_1 = -j/2\\).\n\nWe use the deduced properties of \\(b_k\\). From \\(b_0 = 0\\), we find that \\(a_0\\) must be zero. This significantly simplifies \\(x(t)\\) to just two exponential terms. Next, we use Parseval’s relation. Since time reversal and time shifting don’t change the average power, the average power of \\(x(-t+1)\\) is also \\(1/2\\). Applying Parseval’s to the \\(b_k\\) coefficients, and recalling that \\(b_0=0\\) and \\(b_{-1}=-b_1\\), we find that \\(|b_1|\\) must be \\(1/2\\). Coupled with the fact that \\(b_1\\) is purely imaginary, this means \\(b_1\\) can only be \\(j/2\\) or \\(-j/2\\)."
  },
  {
    "objectID": "ss_35.html#example-3.9-determining-xt",
    "href": "ss_35.html#example-3.9-determining-xt",
    "title": "Signals and Systems",
    "section": "Example 3.9: Determining \\(x(t)\\)",
    "text": "Example 3.9: Determining \\(x(t)\\)\nWe have \\(a_0=0\\) and \\(b_1 = -j a_1^*\\).\nCase 1: \\(b_1 = j/2\\).\n\\(j/2 = -j a_1^* \\implies a_1^* = -1/2 \\implies a_1 = -1/2\\).\nThen \\(x(t) = 2\\operatorname{Re}\\{(-1/2) e^{j\\pi t/2}\\} = 2(-1/2 \\cos(\\pi t/2)) = -\\cos(\\pi t/2)\\).\nCase 2: \\(b_1 = -j/2\\).\n\\(-j/2 = -j a_1^* \\implies a_1^* = 1/2 \\implies a_1 = 1/2\\).\nThen \\(x(t) = 2\\operatorname{Re}\\{(1/2) e^{j\\pi t/2}\\} = 2(1/2 \\cos(\\pi t/2)) = \\cos(\\pi t/2)\\).\nThus, \\(x(t) = \\pm \\cos(\\pi t/2)\\).\n\nFinally, we substitute the possible values of \\(b_1\\) back into our relationship between \\(a_1\\) and \\(b_1\\). This allows us to determine the possible values for \\(a_1\\). With \\(a_0=0\\) and the determined \\(a_1\\), we can reconstruct \\(x(t)\\) using the synthesis equation. As the problem stated, we arrive at \\(x(t)\\) being \\(\\cos(\\pi t/2)\\) or \\(-\\cos(\\pi t/2)\\), demonstrating that the given facts are sufficient to determine the signal up to a sign factor. This is a powerful illustration of how properties can be used in reverse, from frequency domain characteristics to time domain signal reconstruction."
  },
  {
    "objectID": "ss_34.html#convergence-of-the-fourier-series",
    "href": "ss_34.html#convergence-of-the-fourier-series",
    "title": "Signals and Systems",
    "section": "3.4 Convergence of the Fourier Series",
    "text": "3.4 Convergence of the Fourier Series\n\nWelcome to this lecture on the convergence of the Fourier Series. Today, we’ll explore the conditions under which a periodic signal can be accurately represented by its Fourier series, and delve into some interesting phenomena that arise when approximating discontinuous signals. This is a critical topic for understanding the practical applications and limitations of Fourier analysis in ECE."
  },
  {
    "objectID": "ss_34.html#approximating-signals-euler-lagrange-and-fourier",
    "href": "ss_34.html#approximating-signals-euler-lagrange-and-fourier",
    "title": "Signals and Systems",
    "section": "Approximating Signals: Euler, Lagrange, and Fourier",
    "text": "Approximating Signals: Euler, Lagrange, and Fourier\n\nEarly mathematicians like Euler and Lagrange struggled with Fourier series for discontinuous signals.\n\nFourier, however, maintained that even discontinuous signals like square waves could be represented.\n\nWe approximate a periodic signal \\(x(t)\\) using a finite sum of harmonically related complex exponentials: \\[\nx_{N}(t)=\\sum_{k=-N}^{N} a_{k} e^{j k \\omega_{0} t}\n\\]\nThe approximation error is defined as: \\[\ne_{N}(t)=x(t)-x_{N}(t)\n\\]\n\n\nHistorically, the idea of representing a discontinuous function as a sum of continuous sinusoids was quite controversial. Euler and Lagrange, pillars of classical analysis, found this problematic. Fourier, with his more applied perspective, pushed the boundaries, asserting the validity of such representations for a much wider class of signals. This finite sum, \\(x_N(t)\\), is our practical tool for approximation, and understanding its behavior as N grows is key to convergence."
  },
  {
    "objectID": "ss_34.html#minimizing-approximation-error",
    "href": "ss_34.html#minimizing-approximation-error",
    "title": "Signals and Systems",
    "section": "Minimizing Approximation Error",
    "text": "Minimizing Approximation Error\n\nTo quantify the approximation’s quality, we use the energy in the error over one period: \\[\nE_{N}=\\int_{T}\\left|e_{N}(t)\\right|^{2} d t\n\\]\nKey Result: The coefficients \\(a_k\\) that minimize this energy \\(E_N\\) are precisely the Fourier series coefficients: \\[\na_{k}=\\frac{1}{T} \\int_{T} x(t) e^{-j k \\omega_{0} t} d t\n\\]\n\n\n\n\n\n\n\nTip\n\n\nThis means that truncating the Fourier series provides the “best” approximation in a least-squares sense for a finite number of terms.\n\n\n\n\nMinimizing the energy of the error is a common and powerful criterion in signal processing, often leading to optimal solutions. The fact that the Fourier series coefficients naturally emerge as the minimizers here is a fundamental and elegant result, strengthening the importance of the Fourier series. As we increase N, adding more terms, the energy in the error, E_N, will decrease. For a convergent series, E_N will approach zero as N approaches infinity."
  },
  {
    "objectID": "ss_34.html#when-does-a-fourier-series-converge",
    "href": "ss_34.html#when-does-a-fourier-series-converge",
    "title": "Signals and Systems",
    "section": "When Does a Fourier Series Converge?",
    "text": "When Does a Fourier Series Converge?\n\nNot all periodic signals have a valid Fourier series representation.\n\nThe integral for \\(a_k\\) might diverge, or the infinite series for \\(x(t)\\) might not converge to \\(x(t)\\).\n\nFortunately, most practical ECE signals do have Fourier series representations.\nWe’ll discuss two main classes of conditions guaranteeing convergence:\n\nFinite Energy over a Period (Square Integrability)\nDirichlet Conditions (Point-wise Convergence)\n\n\n\nWhile Fourier’s claim that any periodic signal could be represented was a bit ambitious, his intuition was largely correct for engineering applications. Pathological signals that don’t converge are rarely encountered in practice. Understanding these conditions helps us appreciate the robustness of Fourier analysis and its applicability to a vast range of real-world signals, including those with discontinuities."
  },
  {
    "objectID": "ss_34.html#condition-1-finite-energy-square-integrability",
    "href": "ss_34.html#condition-1-finite-energy-square-integrability",
    "title": "Signals and Systems",
    "section": "Condition 1: Finite Energy (Square Integrability)",
    "text": "Condition 1: Finite Energy (Square Integrability)\n\nA periodic signal \\(x(t)\\) has a Fourier series representation if it has finite energy over a single period: \\[ \\int_{T}|x(t)|^{2} d t&lt;\\infty \\]\nGuarantees:\n\nCoefficients \\(a_k\\) are finite.\nThe energy in the approximation error \\(E_N\\) converges to 0 as \\(N \\rightarrow \\infty\\). \\[ \\int_{T}|e(t)|^{2} d t=0 \\quad \\text{where} \\quad e(t)=x(t)-\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k \\omega_{0} t} \\]\n\n\n\n\n\n\n\n\nImportant\n\n\nThis means \\(x(t)\\) and its infinite Fourier series representation are indistinguishable from an energy perspective, even if they differ at isolated points. Physical systems respond to signal energy.\n\n\n\n\nThis condition is perhaps the most fundamental for engineers because it directly relates to the physical reality of signals. If the difference between a signal and its Fourier series has zero energy, then any practical system responding to energy will treat them as identical. This is a very strong form of convergence for engineering purposes. Most signals we encounter, like square waves, triangle waves, and even pulse trains, satisfy this condition."
  },
  {
    "objectID": "ss_34.html#condition-2-dirichlet-conditions",
    "href": "ss_34.html#condition-2-dirichlet-conditions",
    "title": "Signals and Systems",
    "section": "Condition 2: Dirichlet Conditions",
    "text": "Condition 2: Dirichlet Conditions\n\nA set of conditions, developed by P. L. Dirichlet, that guarantee point-wise convergence.\nThis means \\(x(t)\\) equals its Fourier series representation except at isolated discontinuities.\nAt discontinuities, the series converges to the average of the values on either side.\n\n\nWhile finite energy convergence is great for overall system response, sometimes we need to know that the series converges to the exact value of the signal at every point. This is where the Dirichlet conditions come in. They are more restrictive but provide a stronger guarantee about the specific values of the signal. Let’s look at each of these conditions."
  },
  {
    "objectID": "ss_34.html#dirichlet-condition-1-absolute-integrability",
    "href": "ss_34.html#dirichlet-condition-1-absolute-integrability",
    "title": "Signals and Systems",
    "section": "Dirichlet Condition 1: Absolute Integrability",
    "text": "Dirichlet Condition 1: Absolute Integrability\n\nOver any period, \\(x(t)\\) must be absolutely integrable: \\[ \\int_{T}|x(t)| d t&lt;\\infty \\]\nEnsures: Each coefficient \\(a_k\\) will be finite. \\[ \\left|a_{k}\\right| \\leq \\frac{1}{T} \\int_{T}|x(t)| d t \\]\nViolation Example: \\(x(t) = 1/t\\) for \\(0 &lt; t \\leq 1\\), periodic with \\(T=1\\).\n\nThe integral \\(\\int_0^1 (1/t) dt\\) diverges (see Figure 3.8a in textbook).\n\n\n\nThis condition prevents signals from having “infinite area” over a period, which would make the Fourier coefficients infinite. The example \\(x(t)=1/t\\) blows up at \\(t=0\\), making its absolute integral infinite. Such signals are generally not physically realizable or encountered in typical ECE contexts."
  },
  {
    "objectID": "ss_34.html#dirichlet-condition-2-bounded-variation",
    "href": "ss_34.html#dirichlet-condition-2-bounded-variation",
    "title": "Signals and Systems",
    "section": "Dirichlet Condition 2: Bounded Variation",
    "text": "Dirichlet Condition 2: Bounded Variation\n\nIn any finite interval of time, \\(x(t)\\) must have a finite number of maxima and minima during any single period.\nViolation Example: \\(x(t) = \\sin(2\\pi/t)\\) for \\(0 &lt; t \\leq 1\\), periodic with \\(T=1\\).\n\nThis function has an infinite number of oscillations (maxima and minima) as \\(t \\rightarrow 0\\) (see Figure 3.8b in textbook).\n\n\n\nThis condition essentially means the signal can’t oscillate infinitely fast or have an infinite number of “wiggles” within a finite time. The example given, \\(\\sin(2\\pi/t)\\), illustrates this perfectly. As t approaches zero, the argument of the sine function goes to infinity, causing infinitely many oscillations. Again, this is a highly pathological case not typically seen in practical signals."
  },
  {
    "objectID": "ss_34.html#dirichlet-condition-3-finite-discontinuities",
    "href": "ss_34.html#dirichlet-condition-3-finite-discontinuities",
    "title": "Signals and Systems",
    "section": "Dirichlet Condition 3: Finite Discontinuities",
    "text": "Dirichlet Condition 3: Finite Discontinuities\n\nIn any finite interval of time, there are only a finite number of discontinuities.\nFurthermore, each of these discontinuities must be finite.\nViolation Example: A signal with an infinite number of increasingly smaller sections, each introducing a discontinuity (see Figure 3.8c in textbook).\n\n\n\n\n\n\n\nNote\n\n\nMost physically generated or processed signals in ECE satisfy all three Dirichlet conditions.\n\n\n\n\nThis condition is about the “smoothness” of the signal in terms of its jumps. A signal cannot have infinitely many sudden jumps within a finite period. The example describes a signal that gets progressively more complex with an infinite number of steps, violating this condition. In engineering, we generally deal with signals that have a finite number of step changes or impulses within any given time frame."
  },
  {
    "objectID": "ss_34.html#practical-implications-of-dirichlet-conditions",
    "href": "ss_34.html#practical-implications-of-dirichlet-conditions",
    "title": "Signals and Systems",
    "section": "Practical Implications of Dirichlet Conditions",
    "text": "Practical Implications of Dirichlet Conditions\n\n\nFor Signals Satisfying Dirichlet Conditions:\n\nFourier series converges and equals \\(x(t)\\) everywhere except at isolated discontinuities.\nAt discontinuities, the series converges to the average value of the signal on either side.\n\n\nWhy it matters for ECE:\n\nSignals differing only at isolated points have identical integrals.\nThey behave identically under convolution.\nTherefore, they are considered equivalent for LTI system analysis.\n\n\n\nThis is a crucial takeaway for our field. Even with discontinuities, the Fourier series representation is incredibly robust. The differences are so localized that they don’t affect integral properties, which are fundamental to how LTI systems process signals (e.g., convolution involves integration). From a system’s perspective, these signals are effectively the same."
  },
  {
    "objectID": "ss_34.html#the-gibbs-phenomenon-an-introduction",
    "href": "ss_34.html#the-gibbs-phenomenon-an-introduction",
    "title": "Signals and Systems",
    "section": "The Gibbs Phenomenon: An Introduction",
    "text": "The Gibbs Phenomenon: An Introduction\n\nDiscovered by Michelson (1898) and explained by Gibbs (1899).\nIt describes the peculiar behavior of the Fourier series approximation near discontinuities.\nObservation: When approximating a discontinuous signal (like a square wave) with a finite Fourier series, ripples and overshoot occur at the discontinuities.\n\n\nMichelson, a physicist, built a harmonic analyzer and was puzzled by the results when feeding it a square wave. He thought his machine was broken! He contacted Josiah Gibbs, a prominent mathematical physicist, who then provided the full explanation. This phenomenon highlights a key characteristic of approximating discontinuous functions with smooth sinusoids."
  },
  {
    "objectID": "ss_34.html#visualizing-the-gibbs-phenomenon",
    "href": "ss_34.html#visualizing-the-gibbs-phenomenon",
    "title": "Signals and Systems",
    "section": "Visualizing the Gibbs Phenomenon",
    "text": "Visualizing the Gibbs Phenomenon\n\nConsider a symmetric square wave.\nWe’ll observe its finite Fourier series approximation, \\(x_N(t)\\), as \\(N\\) increases.\nNotice the overshoot and ripples near the edges of the square wave.\n\n\nviewof N = Inputs.range([1, 100], {step: 2, value: 5, label: \"Number of terms (N)\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere we have an interactive plot. You can adjust the number of terms, N, using the slider. As you increase N, you’ll see the approximation get closer to the square wave. However, pay close attention to the regions around the discontinuities, where the signal jumps. You’ll notice persistent ripples and an overshoot, regardless of how large N becomes. This is the essence of the Gibbs phenomenon. This visualization directly relates to Figure 3.9 in your textbook."
  },
  {
    "objectID": "ss_34.html#understanding-the-gibbs-phenomenon",
    "href": "ss_34.html#understanding-the-gibbs-phenomenon",
    "title": "Signals and Systems",
    "section": "Understanding the Gibbs Phenomenon",
    "text": "Understanding the Gibbs Phenomenon\n\nOvershoot: For a discontinuity of unity height, the peak amplitude of the ripple is approximately 1.09 (an overshoot of ~9%).\n\nThis overshoot does not decrease with increasing \\(N\\).\n\nRipples: As \\(N\\) increases, the ripples become compressed closer to the discontinuity.\n\nThe width of the ripples decreases, but their peak amplitude remains constant.\n\nConvergence at a point: For any fixed \\(t_1\\), \\(x_N(t_1)\\) will converge to \\(x(t_1)\\) as \\(N \\rightarrow \\infty\\) (or to the average at a discontinuity).\n\nHowever, the closer \\(t_1\\) is to a discontinuity, the larger \\(N\\) must be for the error to be acceptably small.\n\n\n\nIt’s crucial to distinguish between point-wise convergence and the behavior of the peak overshoot. While the Fourier series does converge to the correct value at any given point (including the midpoint of a discontinuity), the maximum error, the overshoot, persists in the vicinity of the discontinuity. This means that even with millions of terms, you’ll still see that 9% overshoot, just squeezed into a smaller and smaller region around the jump. This is why it’s a “phenomenon.”"
  },
  {
    "objectID": "ss_34.html#practical-significance-of-gibbs-phenomenon",
    "href": "ss_34.html#practical-significance-of-gibbs-phenomenon",
    "title": "Signals and Systems",
    "section": "Practical Significance of Gibbs Phenomenon",
    "text": "Practical Significance of Gibbs Phenomenon\n\nIn real-world applications, if a truncated Fourier series \\(x_N(t)\\) is used to approximate a discontinuous signal:\n\nExpect high-frequency ripples and overshoot near discontinuities.\n\nEngineering Consideration:\n\nChoose a sufficiently large \\(N\\) so that the total energy in these ripples becomes insignificant.\nWhile the peak overshoot remains, the energy contained within the shrinking ripple region diminishes.\n\n\n\n\n\n\n\n\nCaution\n\n\nFor applications sensitive to peak values (e.g., driving an amplifier to saturation), the Gibbs phenomenon can be a critical design consideration.\n\n\n\n\nThe Gibbs phenomenon is not a failure of Fourier series, but rather a characteristic of approximating discontinuous signals with continuous functions. It means that if your system is sensitive to instantaneous peak values, you need to be aware that a Fourier series approximation will likely exceed the original signal’s amplitude at the edges. However, for most applications that depend on average power or integrated energy, the effect becomes negligible with enough terms, as the ripples become very narrow."
  },
  {
    "objectID": "ss_34.html#conclusion-convergence-and-practicality",
    "href": "ss_34.html#conclusion-convergence-and-practicality",
    "title": "Signals and Systems",
    "section": "Conclusion: Convergence and Practicality",
    "text": "Conclusion: Convergence and Practicality\n\nMost practical signals in ECE have Fourier series representations.\n\nGuaranteed by finite energy or Dirichlet conditions.\n\nFourier series provides the best least-squares approximation for a finite number of terms.\nThe Gibbs Phenomenon highlights a limitation for discontinuous signals:\n\nPersistent overshoot and ripples near discontinuities, even as \\(N \\rightarrow \\infty\\).\nRipples compress, but peak amplitude remains constant (for a given discontinuity height).\n\nDespite Gibbs, Fourier series remains an indispensable tool for analyzing and synthesizing signals in ECE.\n\n\nTo wrap up, the Fourier series is an incredibly powerful tool in signals and systems. It allows us to decompose complex periodic signals into simpler, harmonically related components. While convergence is generally guaranteed for signals we encounter in practice, understanding the nuances like the Gibbs phenomenon is key to applying these tools effectively and interpreting their results correctly in engineering contexts. This knowledge helps us design better filters, understand system responses, and accurately model signal behavior."
  },
  {
    "objectID": "ss_33.html#introduction-to-periodic-signals",
    "href": "ss_33.html#introduction-to-periodic-signals",
    "title": "Signals and Systems",
    "section": "1. Introduction to Periodic Signals",
    "text": "1. Introduction to Periodic Signals\nA signal \\(x(t)\\) is periodic if, for some positive value of \\(T\\),\n\\[\nx(t)=x(t+T) \\quad \\text { for all } t \\tag{3.21}\n\\]\nThe fundamental period \\(T\\) is the minimum positive, nonzero value satisfying this condition. The fundamental frequency \\(\\omega_{0}\\) is related by \\(\\omega_{0} = 2\\pi/T\\).\n\nRecall from Chapter 1 that periodic signals repeat themselves over a fixed interval. The fundamental period is the shortest time for one complete cycle, and the fundamental frequency tells us how often that cycle occurs in radians per second."
  },
  {
    "objectID": "ss_33.html#basic-periodic-signals",
    "href": "ss_33.html#basic-periodic-signals",
    "title": "Signals and Systems",
    "section": "Basic Periodic Signals",
    "text": "Basic Periodic Signals\nThe building blocks of Fourier Series are complex exponentials.\nSinusoidal Signal:\n\\[\nx(t)=\\cos \\omega_{0} t \\tag{3.22}\n\\]\nComplex Exponential:\n\\[\nx(t)=e^{j \\omega_{0} t} \\tag{3.23}\n\\]\nBoth are periodic with fundamental frequency \\(\\omega_{0}\\) and period \\(T=2\\pi/\\omega_{0}\\).\nHarmonically Related Complex Exponentials:\n\\[\n\\phi_{k}(t)=e^{j k \\omega_{0} t}=e^{j k(2 \\pi / T) t}, \\quad k=0, \\pm 1, \\pm 2, \\ldots \\tag{3.24}\n\\] Each \\(\\phi_k(t)\\) is periodic with period \\(T\\).\n\nWhile real sinusoids are intuitive, complex exponentials are mathematically more convenient for analysis. Notice that each harmonically related exponential φ_k(t) has a frequency that is an integer multiple of the fundamental frequency ω₀. This is key to building complex signals."
  },
  {
    "objectID": "ss_33.html#the-fourier-series-representation",
    "href": "ss_33.html#the-fourier-series-representation",
    "title": "Signals and Systems",
    "section": "2. The Fourier Series Representation",
    "text": "2. The Fourier Series Representation\nA periodic signal \\(x(t)\\) can be represented as a linear combination of harmonically related complex exponentials:\n\\[\nx(t)=\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k \\omega_{0} t}=\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k(2 \\pi / T) t} \\tag{3.25}\n\\]\n\nThe coefficients \\(a_k\\) are called Fourier Series Coefficients.\n\\(k=0\\): DC component (constant term).\n\\(k=\\pm 1\\): Fundamental components (first harmonic).\n\\(k=\\pm N\\): \\(N\\)th harmonic components.\n\n\nThis equation is the heart of the Fourier Series. It states that any periodic signal can be decomposed into a sum of simple sinusoids (or complex exponentials) at integer multiples of the fundamental frequency. The coefficients a_k tell us the amplitude and phase of each frequency component. Think of it like a recipe, where a_k are the ingredients and e^(jkω₀t) are the basic flavors."
  },
  {
    "objectID": "ss_33.html#example-3.2-constructing-a-signal-part-1",
    "href": "ss_33.html#example-3.2-constructing-a-signal-part-1",
    "title": "Signals and Systems",
    "section": "Example 3.2: Constructing a Signal (Part 1)",
    "text": "Example 3.2: Constructing a Signal (Part 1)\nConsider a periodic signal \\(x(t)\\) with fundamental frequency \\(2\\pi\\) (so \\(T=1\\)). It is expressed as:\n\\[\nx(t)=\\sum_{k=-3}^{+3} a_{k} e^{j k 2 \\pi t} \\tag{3.26}\n\\]\nWith coefficients:\n\n\\(a_{0}=1\\)\n\\(a_{1}=a_{-1}=\\frac{1}{4}\\)\n\\(a_{2}=a_{-2}=\\frac{1}{2}\\)\n\\(a_{3}=a_{-3}=\\frac{1}{3}\\)\n\n\nHere, we are given the Fourier series coefficients and are going to reconstruct the time-domain signal. The fundamental frequency is 2π, meaning the fundamental period is 1 second. We only have components up to the 3rd harmonic."
  },
  {
    "objectID": "ss_33.html#example-3.2-constructing-a-signal-part-2",
    "href": "ss_33.html#example-3.2-constructing-a-signal-part-2",
    "title": "Signals and Systems",
    "section": "Example 3.2: Constructing a Signal (Part 2)",
    "text": "Example 3.2: Constructing a Signal (Part 2)\nRewriting the sum and grouping terms:\n\\[\n\\begin{align*}\nx(t)= & 1+\\frac{1}{4}\\left(e^{j 2 \\pi t}+e^{-j 2 \\pi t}\\right)+\\frac{1}{2}\\left(e^{j 4 \\pi t}+e^{-j 4 \\pi t}\\right) \\tag{3.27} \\\\\n& +\\frac{1}{3}\\left(e^{j 6 \\pi t}+e^{-j 6 \\pi t}\\right)\n\\end{align*}\n\\]\nUsing Euler’s relation (\\(e^{j\\theta} + e^{-j\\theta} = 2\\cos\\theta\\)), this simplifies to:\n\\[\nx(t)=1+\\frac{1}{2} \\cos 2 \\pi t+\\cos 4 \\pi t+\\frac{2}{3} \\cos 6 \\pi t \\tag{3.28}\n\\]\n\nBy grouping the complex conjugate exponential terms, we can convert them into real cosine functions. This shows how complex exponentials combine to form real sinusoids, which are often easier to visualize in the time domain."
  },
  {
    "objectID": "ss_33.html#example-3.2-interactive-signal-synthesis",
    "href": "ss_33.html#example-3.2-interactive-signal-synthesis",
    "title": "Signals and Systems",
    "section": "Example 3.2: Interactive Signal Synthesis",
    "text": "Example 3.2: Interactive Signal Synthesis\nSee how a signal is built from its harmonics.\nThis interactive plot shows the individual harmonic components and their sum. Adjust the checkboxes to see how each harmonic contributes to the overall signal.\n\nviewof dc_on = Inputs.toggle({label: \"DC\", value: true})\nviewof fundamental_on = Inputs.toggle({label: \"Fund.\", value: true})\nviewof second_harmonic_on = Inputs.toggle({label: \"2nd Harm.\", value: true})\nviewof third_harmonic_on = Inputs.toggle({label: \"3rd Harm.\", value: true})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot helps visualize the concept of signal synthesis. You can enable or disable individual harmonic components to see how they add up to form the final signal x(t). Notice how the signal becomes more complex as higher harmonics are added. This demonstrates the power of Fourier series in representing any periodic signal."
  },
  {
    "objectID": "ss_33.html#properties-for-real-periodic-signals",
    "href": "ss_33.html#properties-for-real-periodic-signals",
    "title": "Signals and Systems",
    "section": "3. Properties for Real Periodic Signals",
    "text": "3. Properties for Real Periodic Signals\nIf \\(x(t)\\) is a real periodic signal, its Fourier series coefficients \\(a_k\\) have a specific property:\n\\[\na_{k}^{*}=a_{-k} \\tag{3.29}\n\\] This means the coefficients for negative frequencies are the complex conjugates of the coefficients for positive frequencies.\nThis property leads to alternative forms for the Fourier Series.\n\nThis property is very useful for simplifying calculations and understanding the symmetry of the spectrum for real-world signals. It implies that the magnitude spectrum is even, and the phase spectrum is odd."
  },
  {
    "objectID": "ss_33.html#alternative-forms-for-real-signals",
    "href": "ss_33.html#alternative-forms-for-real-signals",
    "title": "Signals and Systems",
    "section": "Alternative Forms for Real Signals",
    "text": "Alternative Forms for Real Signals\nIf \\(x(t)\\) is real, we can express its Fourier series in terms of real sinusoids:\nForm 1 (Amplitude-Phase): If \\(a_{k}=A_{k} e^{j \\theta_{k}}\\), then:\n\\[\nx(t)=a_{0}+2 \\sum_{k=1}^{\\infty} A_{k} \\cos \\left(k \\omega_{0} t+\\theta_{k}\\right) \\tag{3.31}\n\\]\nForm 2 (Cosine-Sine): If \\(a_{k}=B_{k}+j C_{k}\\), then:\n\\[\nx(t)=a_{0}+2 \\sum_{k=1}^{\\infty}\\left[B_{k} \\cos k \\omega_{0} t-C_{k} \\sin k \\omega_{0} t\\right] \\tag{3.32}\n\\]\n\n\n\n\n\n\nNote\n\n\nThe complex exponential form (Eq. 3.25) is generally more convenient for analysis and manipulation in ECE, despite these real-valued alternatives.\n\n\n\n\nThese trigonometric forms are often used in introductory texts, but the complex exponential form is more powerful for advanced analysis, especially when dealing with system responses. It unifies the representation and simplifies mathematical operations."
  },
  {
    "objectID": "ss_33.html#determination-of-fourier-series-coefficients",
    "href": "ss_33.html#determination-of-fourier-series-coefficients",
    "title": "Signals and Systems",
    "section": "4. Determination of Fourier Series Coefficients",
    "text": "4. Determination of Fourier Series Coefficients\nThe Analysis Equation\nTo find the coefficients \\(a_k\\) for a given \\(x(t)\\), we use the following derivation:\n\nMultiply \\(x(t)\\) by \\(e^{-j n \\omega_{0} t}\\): \\[\nx(t) e^{-j n \\omega_{0} t}=\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k \\omega_{0} t} e^{-j n \\omega_{0} t} \\tag{3.33}\n\\]\nIntegrate both sides over one period \\(T\\): \\[\n\\int_{0}^{T} x(t) e^{-j n \\omega_{0} t} d t=\\int_{0}^{T} \\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j(k-n) \\omega_{0} t} d t \\tag{3.34}\n\\]\nInterchange summation and integration: \\[\n\\int_{0}^{T} x(t) e^{-j n \\omega_{0} t} d t=\\sum_{k=-\\infty}^{+\\infty} a_{k}\\left[\\int_{0}^{T} e^{j(k-n) \\omega_{0} t} d t\\right]\n\\]\n\n\nThis derivation is crucial. It shows how we “extract” each individual coefficient a_k from the signal x(t). The key step is the orthogonality property of complex exponentials over a period, which makes all terms in the summation zero except when k=n."
  },
  {
    "objectID": "ss_33.html#the-orthogonality-of-complex-exponentials",
    "href": "ss_33.html#the-orthogonality-of-complex-exponentials",
    "title": "Signals and Systems",
    "section": "The Orthogonality of Complex Exponentials",
    "text": "The Orthogonality of Complex Exponentials\nThe integral \\(\\int_{0}^{T} e^{j(k-n) \\omega_{0} t} d t\\) evaluates as:\n\\[\n\\int_{0}^{T} e^{j(k-n) \\omega_{0} t} d t=\\left\\{\\begin{array}{ll}\nT, & k=n \\\\\n0, & k \\neq n\n\\end{array}\\right.\n\\]\nThis property is called orthogonality. Applying this to the summation yields \\(T a_n\\).\nTherefore, the formula for the Fourier Series coefficients is:\n\\[\na_{n}=\\frac{1}{T} \\int_{T} x(t) e^{-j n \\omega_{0} t} d t \\tag{3.37}\n\\] The integration can be over any interval of length \\(T\\).\n\nThe orthogonality property is what makes Fourier series analysis possible. It allows us to isolate each harmonic component. The integral effectively acts as a “filter” that picks out the n-th harmonic."
  },
  {
    "objectID": "ss_33.html#the-fourier-series-pair",
    "href": "ss_33.html#the-fourier-series-pair",
    "title": "Signals and Systems",
    "section": "The Fourier Series Pair",
    "text": "The Fourier Series Pair\nThe Fourier Series is defined by a pair of equations:\n\n\nSynthesis Equation (Time Domain to Frequency Domain):\nReconstructs \\(x(t)\\) from its coefficients.\n\\[\nx(t)=\\sum_{k=-\\infty}^{+\\infty} a_{k} e^{j k \\omega_{0} t} \\tag{3.38}\n\\]\n\nAnalysis Equation (Frequency Domain to Time Domain):\nDetermines the coefficients \\(a_k\\) from \\(x(t)\\).\n\\[\na_{k}=\\frac{1}{T} \\int_{T} x(t) e^{-j k \\omega_{0} t} d t \\tag{3.39}\n\\]\n\n\n\n\n\n\n\nImportant\n\n\nThese two equations are fundamental to understanding and applying Fourier Series. They represent the bridge between the time domain and the frequency domain.\n\n\n\n\nThe a_k coefficients are also called spectral coefficients. They describe the signal’s content at different frequencies. The coefficient a₀ (when k=0) is simply the average value of \\(x(t)\\) over one period. \\[\na_{0}=\\frac{1}{T} \\int_{T} x(t) d t \\tag{3.40}\n\\]"
  },
  {
    "objectID": "ss_33.html#example-3.3-fourier-series-of-a-simple-sinusoid",
    "href": "ss_33.html#example-3.3-fourier-series-of-a-simple-sinusoid",
    "title": "Signals and Systems",
    "section": "Example 3.3: Fourier Series of a Simple Sinusoid",
    "text": "Example 3.3: Fourier Series of a Simple Sinusoid\nConsider the signal \\(x(t)=\\sin \\omega_{0} t\\).\nWe can determine its Fourier series coefficients by inspection using Euler’s formula:\n\\[\n\\sin \\omega_{0} t=\\frac{1}{2 j} e^{j \\omega_{0} t}-\\frac{1}{2 j} e^{-j \\omega_{0} t}\n\\]\nComparing this to the synthesis equation (Eq. 3.38), we find:\n\n\\(a_{1}=\\frac{1}{2 j}\\)\n\\(a_{-1}=-\\frac{1}{2 j}\\)\n\\(a_{k}=0\\), for \\(k \\neq +1\\) or \\(-1\\).\n\n\nThis example shows that a pure sinusoid only has two non-zero frequency components: one at +ω₀ and one at -ω₀. This is a very clean spectrum. Notice the j in the denominator, indicating a phase shift."
  },
  {
    "objectID": "ss_33.html#example-3.4-more-complex-sum-of-sinusoids-part-1",
    "href": "ss_33.html#example-3.4-more-complex-sum-of-sinusoids-part-1",
    "title": "Signals and Systems",
    "section": "Example 3.4: More Complex Sum of Sinusoids (Part 1)",
    "text": "Example 3.4: More Complex Sum of Sinusoids (Part 1)\nLet \\(x(t)=1+\\sin \\omega_{0} t+2 \\cos \\omega_{0} t+\\cos \\left(2 \\omega_{0} t+\\frac{\\pi}{4}\\right)\\).\nExpanding into complex exponentials and collecting terms:\n\\[\nx(t)=1+\\left(1-\\frac{1}{2} j\\right) e^{j \\omega_{0} t}+\\left(1+\\frac{1}{2} j\\right) e^{-j \\omega_{0} t}+\\left(\\frac{1}{2} e^{j(\\pi / 4)}\\right) e^{j 2 \\omega_{0} t}+\\left(\\frac{1}{2} e^{-j(\\pi / 4)}\\right) e^{-j 2 \\omega_{0} t}\n\\]\nThe Fourier series coefficients are:\n\n\\(a_{0}=1\\)\n\\(a_{1}=1-\\frac{1}{2} j\\)\n\\(a_{-1}=1+\\frac{1}{2} j\\)\n\\(a_{2}=\\frac{1}{2} e^{j(\\pi / 4)}=\\frac{\\sqrt{2}}{4}(1+j)\\)\n\\(a_{-2}=\\frac{1}{2} e^{-j(\\pi / 4)}=\\frac{\\sqrt{2}}{4}(1-j)\\)\n\\(a_{k}=0\\), for \\(|k|&gt;2\\).\n\n\nHere, we’re combining different sinusoids with varying amplitudes and phases. The resulting a_k coefficients are complex, reflecting both the amplitude and phase contribution of each harmonic. Notice how a_k and a_-k are complex conjugates, as expected for a real signal."
  },
  {
    "objectID": "ss_33.html#example-3.4-interactive-spectrum-visualization",
    "href": "ss_33.html#example-3.4-interactive-spectrum-visualization",
    "title": "Signals and Systems",
    "section": "Example 3.4: Interactive Spectrum Visualization",
    "text": "Example 3.4: Interactive Spectrum Visualization\nMagnitude and Phase Spectrum\nThis plot shows the magnitude and phase of the Fourier coefficients \\(a_k\\) for Example 3.4. Interact with the plot to examine the spectral content.\n\n\n\n\n\n\n\nThe magnitude spectrum shows how much “energy” each harmonic contributes to the signal. The phase spectrum shows the relative phase shift of each harmonic. Notice the symmetry for real signals: magnitude is even (|a_k| = |a_-k|) and phase is odd (∠a_k = -∠a_-k). The DC component a₀ has zero phase, as it’s a real constant."
  },
  {
    "objectID": "ss_33.html#example-3.5-periodic-square-wave-part-1",
    "href": "ss_33.html#example-3.5-periodic-square-wave-part-1",
    "title": "Signals and Systems",
    "section": "Example 3.5: Periodic Square Wave (Part 1)",
    "text": "Example 3.5: Periodic Square Wave (Part 1)\nThe periodic square wave is a canonical signal in ECE.\nDefined over one period as:\n\\[\nx(t)= \\begin{cases}1, & |t|&lt;T_{1} \\\\ 0, & T_{1}&lt;|t|&lt;T / 2\\end{cases} \\tag{3.41}\n\\]\nThis signal is periodic with fundamental period \\(T\\) and fundamental frequency \\(\\omega_{0}=2 \\pi / T\\).\n\nThe square wave is a fundamental signal for understanding Fourier series because it’s simple yet contains an infinite number of harmonics. It’s used in digital communications, clock signals, and many other areas. We’ll derive its Fourier series coefficients."
  },
  {
    "objectID": "ss_33.html#example-3.5-periodic-square-wave-part-2",
    "href": "ss_33.html#example-3.5-periodic-square-wave-part-2",
    "title": "Signals and Systems",
    "section": "Example 3.5: Periodic Square Wave (Part 2)",
    "text": "Example 3.5: Periodic Square Wave (Part 2)\nCalculating \\(a_0\\) and \\(a_k\\)\nFor \\(k=0\\) (DC component): \\[\na_{0}=\\frac{1}{T} \\int_{-T_{1}}^{T_{1}} 1 \\, dt=\\frac{2 T_{1}}{T} \\tag{3.42}\n\\] \\(a_0\\) is the average value of \\(x(t)\\) over one period.\nFor \\(k \\neq 0\\): \\[\na_{k}=\\frac{1}{T} \\int_{-T_{1}}^{T_{1}} e^{-j k \\omega_{0} t} d t = \\frac{1}{T} \\left[ \\frac{e^{-j k \\omega_{0} t}}{-j k \\omega_{0}} \\right]_{-T_{1}}^{T_{1}}\n\\] \\[\na_{k}=\\frac{2}{k \\omega_{0} T}\\left[\\frac{e^{j k \\omega_{0} T_{1}}-e^{-j k \\omega_{0} T_{1}}}{2 j}\\right] \\tag{3.43}\n\\] Recognizing the term in brackets as \\(\\sin(k\\omega_0 T_1)\\), and using \\(\\omega_0 T = 2\\pi\\):\n\\[\na_{k}=\\frac{2 \\sin \\left(k \\omega_{0} T_{1}\\right)}{k \\omega_{0} T}=\\frac{\\sin \\left(k \\omega_{0} T_{1}\\right)}{k \\pi}, \\quad k \\neq 0 \\tag{3.44}\n\\]\n\nThe calculation of a₀ is straightforward: it’s simply the fraction of the period for which the signal is ‘on’ (at value 1). For a_k where k≠0, the integration results in a sinc function shape in the frequency domain. This is a very common and important result."
  },
  {
    "objectID": "ss_33.html#example-3.5-periodic-square-wave-part-3",
    "href": "ss_33.html#example-3.5-periodic-square-wave-part-3",
    "title": "Signals and Systems",
    "section": "Example 3.5: Periodic Square Wave (Part 3)",
    "text": "Example 3.5: Periodic Square Wave (Part 3)\nSpectrum for a 50% Duty Cycle\nConsider the case where \\(T=4T_1\\) (a 50% duty cycle, i.e., \\(x(t)=1\\) for half the period). In this case, \\(\\omega_0 T_1 = \\frac{2\\pi}{T} T_1 = \\frac{2\\pi}{4T_1} T_1 = \\frac{\\pi}{2}\\).\n\n\\(a_{0}=\\frac{1}{2}\\)\n\\(a_{k}=\\frac{\\sin (k \\pi / 2)}{k \\pi}, \\quad k \\neq 0\\)\n\nThis implies:\n\n\\(a_k = 0\\) for \\(k\\) even and non-zero.\n\\(a_k\\) alternates sign for odd \\(k\\):\n\n\\(a_1 = a_{-1} = \\frac{1}{\\pi}\\)\n\\(a_3 = a_{-3} = -\\frac{1}{3\\pi}\\)\n\\(a_5 = a_{-5} = \\frac{1}{5\\pi}\\)\n\n\n\nFor a symmetric square wave, all even harmonics (except DC) are zero. This is a characteristic of signals with odd symmetry around the midpoint of the pulse. The coefficients decrease in magnitude as 1/k, which is typical for signals with discontinuities."
  },
  {
    "objectID": "ss_33.html#example-3.5-interactive-square-wave-spectrum",
    "href": "ss_33.html#example-3.5-interactive-square-wave-spectrum",
    "title": "Signals and Systems",
    "section": "Example 3.5: Interactive Square Wave Spectrum",
    "text": "Example 3.5: Interactive Square Wave Spectrum\nObserve the effect of pulse width on the spectrum.\nAdjust the duty cycle (ratio of pulse width \\(2T_1\\) to period \\(T\\)) to see how the frequency spectrum changes. The envelope of the spectrum is a \\(\\text{sinc}\\) function.\n\nviewof duty_cycle = Inputs.range([0.1, 0.9], {step: 0.05, value: 0.5, label: \"Duty Cycle\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis interactive plot vividly demonstrates the relationship between the time-domain characteristics (pulse width/duty cycle) and the frequency-domain spectrum. As you change the duty cycle, observe how the nulls of the sinc envelope shift. A narrower pulse spreads the energy across more frequencies (wider sinc), while a wider pulse concentrates energy (narrower sinc). This is a fundamental concept in signal analysis."
  },
  {
    "objectID": "ss_33.html#summary-applications",
    "href": "ss_33.html#summary-applications",
    "title": "Signals and Systems",
    "section": "Summary & Applications",
    "text": "Summary & Applications\nKey Takeaways:\n\nPeriodic signals can be uniquely represented by their Fourier series coefficients.\nThe Fourier Series provides a powerful tool to move between time and frequency domains.\nComplex exponentials are the fundamental building blocks.\n\nReal-World Engineering Applications:\n\nAudio Processing: Equalization, compression (MP3).\nImage Processing: JPEG compression, filtering.\nCommunication Systems: Modulation, multiplexing, channel analysis.\nFilter Design: Understanding how circuits respond to different frequencies.\nVibration Analysis: Identifying resonant frequencies in mechanical systems.\n\n\n\n\n\n\n\nTip\n\n\nPractice deriving Fourier Series for different signals and interpreting their spectra. Understanding the relationship between time-domain features and frequency-domain characteristics is crucial!\n\n\n\n\nFourier Series is not just a theoretical concept; it’s a cornerstone of modern engineering. From the music you listen to, to the images you see, and the wireless communication you use, Fourier analysis plays a critical role. Mastering this topic will give you a powerful lens through which to view and design systems."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is Signals and Systems Course Notes."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Signals and Systems",
    "section": "",
    "text": "This is Signals and Systems Lecture Notes"
  },
  {
    "objectID": "index.html#week-1",
    "href": "index.html#week-1",
    "title": "Signals and Systems",
    "section": "Week 1",
    "text": "Week 1\n\nRPS\nSignals and Systems 1.1\nSignals and Systems 1.2\nSignals and Systems 1.3\nSignals and Systems 1.4\nSignals and Systems 1.5\nSignals and Systems 1.6"
  },
  {
    "objectID": "index.html#week-2",
    "href": "index.html#week-2",
    "title": "Signals and Systems",
    "section": "Week 2",
    "text": "Week 2\n\nSignals and Systems 2.1\nSignals and Systems 2.2\nSignals and Systems 2.3"
  },
  {
    "objectID": "index.html#week-3",
    "href": "index.html#week-3",
    "title": "Signals and Systems",
    "section": "Week 3",
    "text": "Week 3\n\nSignals and Systems 2.4\nIntroduction to Fourier Analysis\nSignals and Systems 3.2"
  },
  {
    "objectID": "index.html#week-4",
    "href": "index.html#week-4",
    "title": "Signals and Systems",
    "section": "Week 4",
    "text": "Week 4\n\nIntroduction to Fourier Analysis\nBullying"
  },
  {
    "objectID": "index.html#week-5",
    "href": "index.html#week-5",
    "title": "Signals and Systems",
    "section": "Week 5",
    "text": "Week 5\n\nUjian CPMK\nSignals and Systems 3.2\nSignals and Systems 3.3"
  },
  {
    "objectID": "index.html#week-6",
    "href": "index.html#week-6",
    "title": "Signals and Systems",
    "section": "Week 6",
    "text": "Week 6\n\nSignals and Systems 3.4\nSignals and Systems 3.5\nSignals and Systems 3.6\nSignals and Systems 3.7\nCT Fourier Series and DT Fourier Series"
  }
]